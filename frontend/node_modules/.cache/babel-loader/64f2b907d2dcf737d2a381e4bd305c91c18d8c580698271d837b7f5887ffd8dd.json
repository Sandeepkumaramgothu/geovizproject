{"ast":null,"code":"var _jsxFileName = \"/Users/girishkumarpatchikoru/Desktop/projecthci/geovizproject/frontend/src/components/MapView.js\",\n  _s = $RefreshSig$();\n// src/components/MapView.js\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Papa from 'papaparse';\nimport { Bar, Pie, Doughnut, PolarArea } from 'react-chartjs-2';\nimport { Chart as ChartJS, RadialLinearScale, CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport styles from './styles'; // Ensure this file exists and is properly configured\nimport preprocessData from './preprocessData'; // Updated preprocessData.js\nimport { MAPBOX_TOKEN } from './constants'; // Ensure this file contains your Mapbox token\nimport blueMarkerIcon from '../assets/images/custom-marker-blue.png'; // Ensure these assets exist\nimport redMarkerIcon from '../assets/images/custom-marker-red.png';\nimport './marker.css'; // Ensure this CSS file exists for marker styling\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend, ChartDataLabels);\n\n// Set Mapbox access token\nmapboxgl.accessToken = MAPBOX_TOKEN;\nconst MapView = () => {\n  _s();\n  // State Variables\n  const [map, setMap] = useState(null);\n  const [geoData, setGeoData] = useState([]);\n  const [numericHeaders, setNumericHeaders] = useState([]);\n  const [stringHeaders, setStringHeaders] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [chartType, setChartType] = useState('Bar');\n  const [chartData, setChartData] = useState(null);\n  const [totalRows, setTotalRows] = useState(0);\n  const [totalColumns, setTotalColumns] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  const [progress, setProgress] = useState({\n    upload: 0,\n    preprocess: 0,\n    geocode: 0\n  });\n  const [progressMessages, setProgressMessages] = useState({\n    upload: '',\n    preprocess: '',\n    geocode: ''\n  });\n  const [stateList, setStateList] = useState([]);\n  const [selectedState1, setSelectedState1] = useState('');\n  const [selectedState2, setSelectedState2] = useState('');\n  const [markersAdded, setMarkersAdded] = useState(false);\n  const [dataNeedsAggregation, setDataNeedsAggregation] = useState(false);\n  const [compareMarkersEnabled, setCompareMarkersEnabled] = useState(false);\n  const [stateCoordinates, setStateCoordinates] = useState({}); // To store state centroids for markers\n\n  // Initialize Map\n  useEffect(() => {\n    const initializeMap = new mapboxgl.Map({\n      container: 'map',\n      // HTML container id\n      style: 'mapbox://styles/mapbox/streets-v11',\n      // style URL\n      center: [-98.5795, 39.8283],\n      // starting position [lng, lat] (center of USA)\n      zoom: 3 // starting zoom\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    const nav = new mapboxgl.NavigationControl();\n    initializeMap.addControl(nav, 'top-right');\n    setMap(initializeMap);\n\n    // Clean up on unmount\n    return () => initializeMap.remove();\n  }, []);\n\n  // Preprocess Data Function\n  const handlePreprocess = useCallback(async rawData => {\n    setProgress({\n      upload: 100,\n      preprocess: 0,\n      geocode: 0\n    });\n    setProgressMessages({\n      upload: 'Dataset uploaded successfully.',\n      preprocess: '',\n      geocode: ''\n    });\n    const processedData = await preprocessData(rawData, setProgress, 'state');\n    if (!processedData || processedData.length === 0) {\n      alert('Failed to aggregate data by state. Please check your dataset.');\n      setDataNeedsAggregation(false);\n      return;\n    }\n    setGeoData(processedData);\n    setStateList(processedData.map(item => item.state));\n    setStateCoordinates(processedData.reduce((acc, item) => {\n      acc[item.state] = {\n        latitude: item.latitude,\n        longitude: item.longitude\n      };\n      return acc;\n    }, {}));\n\n    // Identify numeric and string headers\n    if (processedData.length > 0) {\n      const headers = Object.keys(processedData[0]);\n      const numeric = [];\n      const strings = [];\n      headers.forEach(header => {\n        if (['latitude', 'longitude', 'state', 'count'].includes(header)) return;\n        const isNumeric = processedData.every(item => {\n          const value = parseFloat(item[header]);\n          return !isNaN(value);\n        });\n        if (isNumeric) {\n          numeric.push(header);\n        } else {\n          strings.push(header);\n        }\n      });\n      setNumericHeaders(numeric);\n      setStringHeaders(strings);\n      setTotalRows(processedData.length);\n      setTotalColumns(headers.length);\n    }\n    setProgressMessages(prev => ({\n      ...prev,\n      preprocess: 'Preprocessing completed.'\n    }));\n    setDataNeedsAggregation(true);\n  }, []);\n\n  // Handle File Upload\n  const handleFileUpload = event => {\n    setProgress({\n      upload: 0,\n      preprocess: 0,\n      geocode: 0\n    });\n    setProgressMessages({\n      upload: '',\n      preprocess: '',\n      geocode: ''\n    });\n    const file = event.target.files[0];\n    if (file) {\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n      if (fileExtension === 'json') {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          try {\n            const data = JSON.parse(e.target.result);\n            await handlePreprocess(data);\n          } catch (error) {\n            console.error('Invalid JSON format:', error);\n            alert('Error: Uploaded file is not valid JSON.');\n          }\n        };\n        reader.readAsText(file);\n      } else if (fileExtension === 'csv') {\n        Papa.parse(file, {\n          header: true,\n          skipEmptyLines: true,\n          complete: async results => {\n            await handlePreprocess(results.data);\n          },\n          error: error => {\n            console.error('CSV parsing error:', error);\n            alert('Error: Failed to parse CSV file.');\n          }\n        });\n      } else {\n        alert('Please upload a valid JSON or CSV file.');\n      }\n    }\n  };\n\n  // Handle Location Selection from Map\n  const handleLocationSelect = useCallback(locationData => {\n    console.log('Marker clicked:', locationData); // Debugging statement\n    // Clear state selections if a map marker is selected\n    setSelectedState1('');\n    setSelectedState2('');\n    setCompareMarkersEnabled(false);\n    if (selectedLocation && selectedLocation.state === locationData.state) {\n      setSelectedLocation(null); // Deselect\n      setChartData(null);\n    } else {\n      setSelectedLocation(locationData);\n      setChartData(null);\n    }\n  }, [selectedLocation]);\n\n  // Handle State Comparison Selection\n  const handleStateSelection = () => {\n    if (selectedState1 && selectedState2) {\n      const data1 = geoData.find(item => item.state === selectedState1);\n      const data2 = geoData.find(item => item.state === selectedState2);\n      if (!data1 || !data2) {\n        alert('One or both selected states have no data.');\n        return;\n      }\n\n      // Prepare chart data for comparison\n      const aggregatedData = [data1, data2];\n      const labels = numericHeaders;\n      const datasets = aggregatedData.map((data, index) => ({\n        label: data.state,\n        data: numericHeaders.map(header => data[header]),\n        backgroundColor: index === 0 ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)',\n        borderColor: index === 0 ? 'rgba(255, 99, 132, 1)' : 'rgba(54, 162, 235, 1)',\n        borderWidth: 1\n      }));\n      setChartData({\n        labels,\n        datasets\n      });\n      setSelectedLocation(null); // Deselect any single location\n\n      // Enable the \"Mark on Map\" button\n      setCompareMarkersEnabled(true);\n    }\n  };\n\n  // Generate Chart Data for Selected Location\n  const generateChartData = useCallback(() => {\n    if (selectedLocation) {\n      const locationValues = numericHeaders.map(header => ({\n        label: header,\n        value: parseFloat(selectedLocation[header]) || 0\n      }));\n      setChartData({\n        labels: locationValues.map(item => item.label),\n        datasets: [{\n          label: selectedLocation.state,\n          data: locationValues.map(item => item.value),\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      });\n    }\n  }, [selectedLocation, numericHeaders]);\n\n  // Data Generation\n  useEffect(() => {\n    generateChartData();\n  }, [generateChartData, chartType, selectedLocation]);\n\n  // Markers on Map\n  const renderMarkers = useCallback(() => {\n    if (map && geoData.length > 0) {\n      // Remove existing markers\n      markers.forEach(marker => marker.remove());\n      const newMarkers = [];\n      geoData.forEach(data => {\n        const stateName = data.state;\n        const coords = stateCoordinates[stateName];\n        if (!coords) return;\n        const latitude = parseFloat(coords.latitude);\n        const longitude = parseFloat(coords.longitude);\n        if (!isNaN(latitude) && !isNaN(longitude)) {\n          const el = document.createElement('div');\n          el.className = 'marker';\n          const isSelected = selectedLocation ? selectedLocation.state === data.state : false;\n          const icon = isSelected ? redMarkerIcon : blueMarkerIcon;\n          el.style.backgroundImage = `url(${icon})`;\n          el.style.width = '30px';\n          el.style.height = '30px';\n          el.style.backgroundSize = 'contain';\n          el.style.cursor = 'pointer';\n          const marker = new mapboxgl.Marker(el).setLngLat([longitude, latitude]).addTo(map);\n          marker.getElement().addEventListener('click', () => {\n            handleLocationSelect(data);\n          });\n          newMarkers.push(marker);\n        }\n      });\n      setMarkers(newMarkers);\n      setMarkersAdded(true);\n      setProgress(prev => ({\n        ...prev,\n        geocode: 100\n      }));\n      setProgressMessages(prev => ({\n        ...prev,\n        geocode: 'Locations marked on the map.'\n      }));\n    }\n  }, [map, geoData, selectedLocation, handleLocationSelect, stateCoordinates, markers]);\n\n  // Render Selected Markers for Comparison\n  const renderSelectedMarkers = useCallback(() => {\n    if (map && selectedState1 && selectedState2) {\n      // Remove existing markers\n      markers.forEach(marker => marker.remove());\n      const newMarkers = [];\n      const selectedStates = [selectedState1, selectedState2];\n      const bounds = new mapboxgl.LngLatBounds();\n      for (const stateName of selectedStates) {\n        const data = geoData.find(item => item.state === stateName);\n        if (!data) continue;\n        const coords = stateCoordinates[stateName];\n        if (!coords) continue;\n        const latitude = parseFloat(coords.latitude);\n        const longitude = parseFloat(coords.longitude);\n        if (!isNaN(latitude) && !isNaN(longitude)) {\n          const el = document.createElement('div');\n          el.className = 'marker';\n          el.style.backgroundImage = `url(${blueMarkerIcon})`;\n          el.style.width = '30px';\n          el.style.height = '30px';\n          el.style.backgroundSize = 'contain';\n          el.style.cursor = 'pointer';\n          const marker = new mapboxgl.Marker(el).setLngLat([longitude, latitude]).addTo(map);\n\n          // Add a popup or label with the state name\n          const popup = new mapboxgl.Popup({\n            offset: 25\n          }).setText(stateName);\n          marker.setPopup(popup);\n          bounds.extend([longitude, latitude]);\n          newMarkers.push(marker);\n        }\n      }\n      setMarkers(newMarkers);\n      setMarkersAdded(true);\n\n      // Adjust the map to fit the markers\n      if (!bounds.isEmpty()) {\n        map.fitBounds(bounds, {\n          padding: 50\n        });\n      }\n    }\n  }, [map, selectedState1, selectedState2, geoData, markers, stateCoordinates]);\n\n  // Re-render markers when selectedLocation changes to update marker colors\n  useEffect(() => {\n    if (markersAdded) {\n      renderMarkers();\n    }\n  }, [selectedLocation, renderMarkers, markersAdded]);\n\n  // Chart Options\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: chartType === 'Bar' ? {\n      y: {\n        beginAtZero: true\n      }\n    } : {},\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      datalabels: {\n        display: true,\n        color: '#000',\n        align: 'center',\n        // Align labels to the center of the bars\n        anchor: 'center',\n        formatter: function (value, context) {\n          const dataset = context.chart.data.datasets[context.datasetIndex];\n          if (dataset.actualValues) {\n            const actualValue = dataset.actualValues[context.dataIndex];\n            if (typeof actualValue === 'number' && !isNaN(actualValue)) {\n              return actualValue.toFixed(2); // Display actual value\n            } else {\n              return '';\n            }\n          } else {\n            if (typeof value === 'number' && !isNaN(value)) {\n              return value.toFixed(2);\n            } else {\n              return '';\n            }\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const dataset = context.dataset;\n            const actualValue = dataset.actualValues ? dataset.actualValues[context.dataIndex] : context.parsed.y;\n            if (typeof actualValue === 'number' && !isNaN(actualValue)) {\n              return `${context.label}: ${actualValue.toFixed(2)}`;\n            } else {\n              return `${context.label}: ${actualValue || ''}`;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // Conditional Rendering: Alert if data isn't aggregated by state\n  useEffect(() => {\n    if (geoData.length === 0 && dataNeedsAggregation) {\n      alert('Dataset does not contain sufficient location information to aggregate by state.');\n    }\n  }, [geoData, dataNeedsAggregation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: styles.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.combinedBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.progressContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.progressItem,\n            children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: progress.upload,\n              text: `${Math.round(progress.upload)}%`,\n              styles: {\n                root: {\n                  width: '80px'\n                },\n                text: {\n                  fontSize: '10px'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.progressMessage,\n              children: progressMessages.upload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.progressItem,\n            children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: progress.preprocess,\n              text: `${Math.round(progress.preprocess)}%`,\n              styles: {\n                root: {\n                  width: '80px'\n                },\n                text: {\n                  fontSize: '10px'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.progressMessage,\n              children: progressMessages.preprocess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.progressItem,\n            children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: progress.geocode,\n              text: `${Math.round(progress.geocode)}%`,\n              styles: {\n                root: {\n                  width: '80px'\n                },\n                text: {\n                  fontSize: '10px'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.progressMessage,\n              children: progressMessages.geocode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.sectionTitle,\n            children: \"Upload Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json, .csv\",\n            onChange: handleFileUpload,\n            style: styles.fileInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), geoData.length > 0 && !markersAdded && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.section,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: renderMarkers,\n            style: {\n              ...styles.chartButton,\n              backgroundColor: '#17a2b8',\n              width: '100%'\n            },\n            children: \"Mark Locations on Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.sectionTitle,\n            children: \"Dataset Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), geoData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.datasetDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"States:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), \" \", totalRows]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Columns:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this), \" \", totalColumns]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Numeric Columns:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), \" \", numericHeaders.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"String Columns:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), \" \", stringHeaders.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No dataset uploaded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.sectionTitle,\n            children: \"Compare Two States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              children: \"State 1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedState1,\n              onChange: e => setSelectedState1(e.target.value),\n              style: styles.selectDropdown,\n              disabled: stateList.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this), stateList.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: state,\n                children: state\n              }, state, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              children: \"State 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedState2,\n              onChange: e => setSelectedState2(e.target.value),\n              style: styles.selectDropdown,\n              disabled: stateList.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this), stateList.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: state,\n                children: state\n              }, state, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStateSelection,\n            disabled: !selectedState1 || !selectedState2,\n            style: {\n              ...styles.chartButton,\n              backgroundColor: selectedState1 && selectedState2 ? '#28a745' : '#6c757d'\n            },\n            children: \"Compare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), compareMarkersEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: renderSelectedMarkers,\n              style: {\n                ...styles.chartButton,\n                backgroundColor: '#17a2b8',\n                width: '100%'\n              },\n              children: \"Mark Selected States on Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.sectionTitle,\n            children: \"Select Chart Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.chartOptions,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setChartType('Bar'),\n              style: {\n                ...styles.chartButton,\n                ...(chartType === 'Bar' ? styles.chartButtonActive : {})\n              },\n              children: \"Bar Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setChartType('Pie'),\n              style: {\n                ...styles.chartButton,\n                ...(chartType === 'Pie' ? styles.chartButtonActive : {})\n              },\n              children: \"Pie Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setChartType('Doughnut'),\n              style: {\n                ...styles.chartButton,\n                ...(chartType === 'Doughnut' ? styles.chartButtonActive : {})\n              },\n              children: \"Doughnut Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setChartType('PolarArea'),\n              style: {\n                ...styles.chartButton,\n                ...(chartType === 'PolarArea' ? styles.chartButtonActive : {})\n              },\n              children: \"PolarArea Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chartContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.chartContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [chartType, \" Chart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), chartType === 'Bar' && /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 41\n            }, this), chartType === 'Pie' && /*#__PURE__*/_jsxDEV(Pie, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 41\n            }, this), chartType === 'Doughnut' && /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 19\n            }, this), chartType === 'PolarArea' && /*#__PURE__*/_jsxDEV(PolarArea, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 493,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"iCUI3uUpKjE3E15fjzW5VJV33YY=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","mapboxgl","Papa","Bar","Pie","Doughnut","PolarArea","Chart","ChartJS","RadialLinearScale","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","ChartDataLabels","CircularProgressbar","styles","preprocessData","MAPBOX_TOKEN","blueMarkerIcon","redMarkerIcon","jsxDEV","_jsxDEV","register","accessToken","MapView","_s","map","setMap","geoData","setGeoData","numericHeaders","setNumericHeaders","stringHeaders","setStringHeaders","selectedLocation","setSelectedLocation","chartType","setChartType","chartData","setChartData","totalRows","setTotalRows","totalColumns","setTotalColumns","markers","setMarkers","progress","setProgress","upload","preprocess","geocode","progressMessages","setProgressMessages","stateList","setStateList","selectedState1","setSelectedState1","selectedState2","setSelectedState2","markersAdded","setMarkersAdded","dataNeedsAggregation","setDataNeedsAggregation","compareMarkersEnabled","setCompareMarkersEnabled","stateCoordinates","setStateCoordinates","initializeMap","Map","container","style","center","zoom","nav","NavigationControl","addControl","remove","handlePreprocess","rawData","processedData","length","alert","item","state","reduce","acc","latitude","longitude","headers","Object","keys","numeric","strings","forEach","header","includes","isNumeric","every","value","parseFloat","isNaN","push","prev","handleFileUpload","event","file","target","files","fileExtension","name","split","pop","toLowerCase","reader","FileReader","onload","e","data","JSON","parse","result","error","console","readAsText","skipEmptyLines","complete","results","handleLocationSelect","locationData","log","handleStateSelection","data1","find","data2","aggregatedData","labels","datasets","index","label","backgroundColor","borderColor","borderWidth","generateChartData","locationValues","renderMarkers","marker","newMarkers","stateName","coords","el","document","createElement","className","isSelected","icon","backgroundImage","width","height","backgroundSize","cursor","Marker","setLngLat","addTo","getElement","addEventListener","renderSelectedMarkers","selectedStates","bounds","LngLatBounds","popup","Popup","offset","setText","setPopup","extend","isEmpty","fitBounds","padding","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","plugins","legend","position","datalabels","display","color","align","anchor","formatter","context","dataset","chart","datasetIndex","actualValues","actualValue","dataIndex","toFixed","tooltip","callbacks","parsed","children","id","fileName","_jsxFileName","lineNumber","columnNumber","sidebar","combinedBox","progressContainer","progressItem","text","Math","round","root","fontSize","progressMessage","section","sectionTitle","type","accept","onChange","fileInput","onClick","chartButton","datasetDetails","join","inputGroup","inputLabel","selectDropdown","disabled","marginTop","chartButtonActive","chartContainer","chartWrapper","chartContent","options","_c","$RefreshReg$"],"sources":["/Users/girishkumarpatchikoru/Desktop/projecthci/geovizproject/frontend/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Papa from 'papaparse';\r\nimport { Bar, Pie, Doughnut, PolarArea } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  RadialLinearScale,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nimport styles from './styles'; // Ensure this file exists and is properly configured\r\nimport preprocessData from './preprocessData'; // Updated preprocessData.js\r\nimport { MAPBOX_TOKEN } from './constants'; // Ensure this file contains your Mapbox token\r\nimport blueMarkerIcon from '../assets/images/custom-marker-blue.png'; // Ensure these assets exist\r\nimport redMarkerIcon from '../assets/images/custom-marker-red.png';\r\nimport './marker.css'; // Ensure this CSS file exists for marker styling\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  RadialLinearScale,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChartDataLabels\r\n);\r\n\r\n// Set Mapbox access token\r\nmapboxgl.accessToken = MAPBOX_TOKEN;\r\n\r\nconst MapView = () => {\r\n  // State Variables\r\n  const [map, setMap] = useState(null);\r\n  const [geoData, setGeoData] = useState([]);\r\n  const [numericHeaders, setNumericHeaders] = useState([]);\r\n  const [stringHeaders, setStringHeaders] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [chartType, setChartType] = useState('Bar');\r\n  const [chartData, setChartData] = useState(null);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [totalColumns, setTotalColumns] = useState(0);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [progress, setProgress] = useState({\r\n    upload: 0,\r\n    preprocess: 0,\r\n    geocode: 0,\r\n  });\r\n  const [progressMessages, setProgressMessages] = useState({\r\n    upload: '',\r\n    preprocess: '',\r\n    geocode: '',\r\n  });\r\n  const [stateList, setStateList] = useState([]);\r\n  const [selectedState1, setSelectedState1] = useState('');\r\n  const [selectedState2, setSelectedState2] = useState('');\r\n  const [markersAdded, setMarkersAdded] = useState(false);\r\n  const [dataNeedsAggregation, setDataNeedsAggregation] = useState(false);\r\n  const [compareMarkersEnabled, setCompareMarkersEnabled] = useState(false);\r\n  const [stateCoordinates, setStateCoordinates] = useState({}); // To store state centroids for markers\r\n\r\n  // Initialize Map\r\n  useEffect(() => {\r\n    const initializeMap = new mapboxgl.Map({\r\n      container: 'map', // HTML container id\r\n      style: 'mapbox://styles/mapbox/streets-v11', // style URL\r\n      center: [-98.5795, 39.8283], // starting position [lng, lat] (center of USA)\r\n      zoom: 3, // starting zoom\r\n    });\r\n\r\n    // Add navigation control (the +/- zoom buttons)\r\n    const nav = new mapboxgl.NavigationControl();\r\n    initializeMap.addControl(nav, 'top-right');\r\n\r\n    setMap(initializeMap);\r\n\r\n    // Clean up on unmount\r\n    return () => initializeMap.remove();\r\n  }, []);\r\n\r\n  // Preprocess Data Function\r\n  const handlePreprocess = useCallback(\r\n    async (rawData) => {\r\n      setProgress({\r\n        upload: 100,\r\n        preprocess: 0,\r\n        geocode: 0,\r\n      });\r\n      setProgressMessages({\r\n        upload: 'Dataset uploaded successfully.',\r\n        preprocess: '',\r\n        geocode: '',\r\n      });\r\n\r\n      const processedData = await preprocessData(rawData, setProgress, 'state');\r\n\r\n      if (!processedData || processedData.length === 0) {\r\n        alert('Failed to aggregate data by state. Please check your dataset.');\r\n        setDataNeedsAggregation(false);\r\n        return;\r\n      }\r\n\r\n      setGeoData(processedData);\r\n      setStateList(processedData.map((item) => item.state));\r\n      setStateCoordinates(\r\n        processedData.reduce((acc, item) => {\r\n          acc[item.state] = {\r\n            latitude: item.latitude,\r\n            longitude: item.longitude,\r\n          };\r\n          return acc;\r\n        }, {})\r\n      );\r\n\r\n      // Identify numeric and string headers\r\n      if (processedData.length > 0) {\r\n        const headers = Object.keys(processedData[0]);\r\n        const numeric = [];\r\n        const strings = [];\r\n\r\n        headers.forEach((header) => {\r\n          if (\r\n            [\r\n              'latitude',\r\n              'longitude',\r\n              'state',\r\n              'count',\r\n            ].includes(header)\r\n          )\r\n            return;\r\n\r\n          const isNumeric = processedData.every((item) => {\r\n            const value = parseFloat(item[header]);\r\n            return !isNaN(value);\r\n          });\r\n          if (isNumeric) {\r\n            numeric.push(header);\r\n          } else {\r\n            strings.push(header);\r\n          }\r\n        });\r\n\r\n        setNumericHeaders(numeric);\r\n        setStringHeaders(strings);\r\n\r\n        setTotalRows(processedData.length);\r\n        setTotalColumns(headers.length);\r\n      }\r\n\r\n      setProgressMessages((prev) => ({\r\n        ...prev,\r\n        preprocess: 'Preprocessing completed.',\r\n      }));\r\n      setDataNeedsAggregation(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Handle File Upload\r\n  const handleFileUpload = (event) => {\r\n    setProgress({\r\n      upload: 0,\r\n      preprocess: 0,\r\n      geocode: 0,\r\n    });\r\n    setProgressMessages({\r\n      upload: '',\r\n      preprocess: '',\r\n      geocode: '',\r\n    });\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileExtension = file.name.split('.').pop().toLowerCase();\r\n\r\n      if (fileExtension === 'json') {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          try {\r\n            const data = JSON.parse(e.target.result);\r\n            await handlePreprocess(data);\r\n          } catch (error) {\r\n            console.error('Invalid JSON format:', error);\r\n            alert('Error: Uploaded file is not valid JSON.');\r\n          }\r\n        };\r\n        reader.readAsText(file);\r\n      } else if (fileExtension === 'csv') {\r\n        Papa.parse(file, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: async (results) => {\r\n            await handlePreprocess(results.data);\r\n          },\r\n          error: (error) => {\r\n            console.error('CSV parsing error:', error);\r\n            alert('Error: Failed to parse CSV file.');\r\n          },\r\n        });\r\n      } else {\r\n        alert('Please upload a valid JSON or CSV file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle Location Selection from Map\r\n  const handleLocationSelect = useCallback(\r\n    (locationData) => {\r\n      console.log('Marker clicked:', locationData); // Debugging statement\r\n      // Clear state selections if a map marker is selected\r\n      setSelectedState1('');\r\n      setSelectedState2('');\r\n      setCompareMarkersEnabled(false);\r\n      if (selectedLocation && selectedLocation.state === locationData.state) {\r\n        setSelectedLocation(null); // Deselect\r\n        setChartData(null);\r\n      } else {\r\n        setSelectedLocation(locationData);\r\n        setChartData(null);\r\n      }\r\n    },\r\n    [selectedLocation]\r\n  );\r\n\r\n  // Handle State Comparison Selection\r\n  const handleStateSelection = () => {\r\n    if (selectedState1 && selectedState2) {\r\n      const data1 = geoData.find((item) => item.state === selectedState1);\r\n      const data2 = geoData.find((item) => item.state === selectedState2);\r\n\r\n      if (!data1 || !data2) {\r\n        alert('One or both selected states have no data.');\r\n        return;\r\n      }\r\n\r\n      // Prepare chart data for comparison\r\n      const aggregatedData = [data1, data2];\r\n      const labels = numericHeaders;\r\n      const datasets = aggregatedData.map((data, index) => ({\r\n        label: data.state,\r\n        data: numericHeaders.map((header) => data[header]),\r\n        backgroundColor:\r\n          index === 0\r\n            ? 'rgba(255, 99, 132, 0.5)'\r\n            : 'rgba(54, 162, 235, 0.5)',\r\n        borderColor:\r\n          index === 0\r\n            ? 'rgba(255, 99, 132, 1)'\r\n            : 'rgba(54, 162, 235, 1)',\r\n        borderWidth: 1,\r\n      }));\r\n\r\n      setChartData({\r\n        labels,\r\n        datasets,\r\n      });\r\n      setSelectedLocation(null); // Deselect any single location\r\n\r\n      // Enable the \"Mark on Map\" button\r\n      setCompareMarkersEnabled(true);\r\n    }\r\n  };\r\n\r\n  // Generate Chart Data for Selected Location\r\n  const generateChartData = useCallback(() => {\r\n    if (selectedLocation) {\r\n      const locationValues = numericHeaders.map((header) => ({\r\n        label: header,\r\n        value: parseFloat(selectedLocation[header]) || 0,\r\n      }));\r\n\r\n      setChartData({\r\n        labels: locationValues.map((item) => item.label),\r\n        datasets: [\r\n          {\r\n            label: selectedLocation.state,\r\n            data: locationValues.map((item) => item.value),\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.5)',\r\n              'rgba(54, 162, 235, 0.5)',\r\n              'rgba(255, 206, 86, 0.5)',\r\n              'rgba(75, 192, 192, 0.5)',\r\n              'rgba(153, 102, 255, 0.5)',\r\n              'rgba(255, 159, 64, 0.5)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [selectedLocation, numericHeaders]);\r\n\r\n  // Data Generation\r\n  useEffect(() => {\r\n    generateChartData();\r\n  }, [generateChartData, chartType, selectedLocation]);\r\n\r\n  // Markers on Map\r\n  const renderMarkers = useCallback(() => {\r\n    if (map && geoData.length > 0) {\r\n      // Remove existing markers\r\n      markers.forEach((marker) => marker.remove());\r\n      const newMarkers = [];\r\n\r\n      geoData.forEach((data) => {\r\n        const stateName = data.state;\r\n        const coords = stateCoordinates[stateName];\r\n        if (!coords) return;\r\n\r\n        const latitude = parseFloat(coords.latitude);\r\n        const longitude = parseFloat(coords.longitude);\r\n\r\n        if (!isNaN(latitude) && !isNaN(longitude)) {\r\n          const el = document.createElement('div');\r\n          el.className = 'marker';\r\n          const isSelected = selectedLocation\r\n            ? selectedLocation.state === data.state\r\n            : false;\r\n          const icon = isSelected ? redMarkerIcon : blueMarkerIcon;\r\n          el.style.backgroundImage = `url(${icon})`;\r\n          el.style.width = '30px';\r\n          el.style.height = '30px';\r\n          el.style.backgroundSize = 'contain';\r\n          el.style.cursor = 'pointer';\r\n\r\n          const marker = new mapboxgl.Marker(el)\r\n            .setLngLat([longitude, latitude])\r\n            .addTo(map);\r\n\r\n          marker.getElement().addEventListener('click', () => {\r\n            handleLocationSelect(data);\r\n          });\r\n\r\n          newMarkers.push(marker);\r\n        }\r\n      });\r\n      setMarkers(newMarkers);\r\n      setMarkersAdded(true);\r\n\r\n      setProgress((prev) => ({ ...prev, geocode: 100 }));\r\n      setProgressMessages((prev) => ({\r\n        ...prev,\r\n        geocode: 'Locations marked on the map.',\r\n      }));\r\n    }\r\n  }, [map, geoData, selectedLocation, handleLocationSelect, stateCoordinates, markers]);\r\n\r\n  // Render Selected Markers for Comparison\r\n  const renderSelectedMarkers = useCallback(() => {\r\n    if (map && selectedState1 && selectedState2) {\r\n      // Remove existing markers\r\n      markers.forEach((marker) => marker.remove());\r\n      const newMarkers = [];\r\n\r\n      const selectedStates = [selectedState1, selectedState2];\r\n\r\n      const bounds = new mapboxgl.LngLatBounds();\r\n\r\n      for (const stateName of selectedStates) {\r\n        const data = geoData.find((item) => item.state === stateName);\r\n        if (!data) continue;\r\n        const coords = stateCoordinates[stateName];\r\n        if (!coords) continue;\r\n\r\n        const latitude = parseFloat(coords.latitude);\r\n        const longitude = parseFloat(coords.longitude);\r\n\r\n        if (!isNaN(latitude) && !isNaN(longitude)) {\r\n          const el = document.createElement('div');\r\n          el.className = 'marker';\r\n          el.style.backgroundImage = `url(${blueMarkerIcon})`;\r\n          el.style.width = '30px';\r\n          el.style.height = '30px';\r\n          el.style.backgroundSize = 'contain';\r\n          el.style.cursor = 'pointer';\r\n\r\n          const marker = new mapboxgl.Marker(el)\r\n            .setLngLat([longitude, latitude])\r\n            .addTo(map);\r\n\r\n          // Add a popup or label with the state name\r\n          const popup = new mapboxgl.Popup({ offset: 25 }).setText(stateName);\r\n          marker.setPopup(popup);\r\n\r\n          bounds.extend([longitude, latitude]);\r\n\r\n          newMarkers.push(marker);\r\n        }\r\n      }\r\n\r\n      setMarkers(newMarkers);\r\n      setMarkersAdded(true);\r\n\r\n      // Adjust the map to fit the markers\r\n      if (!bounds.isEmpty()) {\r\n        map.fitBounds(bounds, { padding: 50 });\r\n      }\r\n    }\r\n  }, [map, selectedState1, selectedState2, geoData, markers, stateCoordinates]);\r\n\r\n  // Re-render markers when selectedLocation changes to update marker colors\r\n  useEffect(() => {\r\n    if (markersAdded) {\r\n      renderMarkers();\r\n    }\r\n  }, [selectedLocation, renderMarkers, markersAdded]);\r\n\r\n  // Chart Options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales:\r\n      chartType === 'Bar'\r\n        ? {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          }\r\n        : {},\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      datalabels: {\r\n        display: true,\r\n        color: '#000',\r\n        align: 'center', // Align labels to the center of the bars\r\n        anchor: 'center',\r\n        formatter: function (value, context) {\r\n          const dataset = context.chart.data.datasets[context.datasetIndex];\r\n          if (dataset.actualValues) {\r\n            const actualValue = dataset.actualValues[context.dataIndex];\r\n            if (typeof actualValue === 'number' && !isNaN(actualValue)) {\r\n              return actualValue.toFixed(2); // Display actual value\r\n            } else {\r\n              return '';\r\n            }\r\n          } else {\r\n            if (typeof value === 'number' && !isNaN(value)) {\r\n              return value.toFixed(2);\r\n            } else {\r\n              return '';\r\n            }\r\n          }\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            const dataset = context.dataset;\r\n            const actualValue = dataset.actualValues\r\n              ? dataset.actualValues[context.dataIndex]\r\n              : context.parsed.y;\r\n            if (typeof actualValue === 'number' && !isNaN(actualValue)) {\r\n              return `${context.label}: ${actualValue.toFixed(2)}`;\r\n            } else {\r\n              return `${context.label}: ${actualValue || ''}`;\r\n            }\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // Conditional Rendering: Alert if data isn't aggregated by state\r\n  useEffect(() => {\r\n    if (geoData.length === 0 && dataNeedsAggregation) {\r\n      alert('Dataset does not contain sufficient location information to aggregate by state.');\r\n    }\r\n  }, [geoData, dataNeedsAggregation]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* Map Container */}\r\n      <div id=\"map\" style={styles.map}></div>\r\n\r\n      {/* Sidebar */}\r\n      <div style={styles.sidebar}>\r\n        {/* Combined Controls Box */}\r\n        <div style={styles.combinedBox}>\r\n          {/* Progress Indicators */}\r\n          <div style={styles.progressContainer}>\r\n            <div style={styles.progressItem}>\r\n              <CircularProgressbar\r\n                value={progress.upload}\r\n                text={`${Math.round(progress.upload)}%`}\r\n                styles={{\r\n                  root: { width: '80px' },\r\n                  text: { fontSize: '10px' },\r\n                }}\r\n              />\r\n              <div style={styles.progressMessage}>{progressMessages.upload}</div>\r\n            </div>\r\n            <div style={styles.progressItem}>\r\n              <CircularProgressbar\r\n                value={progress.preprocess}\r\n                text={`${Math.round(progress.preprocess)}%`}\r\n                styles={{\r\n                  root: { width: '80px' },\r\n                  text: { fontSize: '10px' },\r\n                }}\r\n              />\r\n              <div style={styles.progressMessage}>{progressMessages.preprocess}</div>\r\n            </div>\r\n            <div style={styles.progressItem}>\r\n              <CircularProgressbar\r\n                value={progress.geocode}\r\n                text={`${Math.round(progress.geocode)}%`}\r\n                styles={{\r\n                  root: { width: '80px' },\r\n                  text: { fontSize: '10px' },\r\n                }}\r\n              />\r\n              <div style={styles.progressMessage}>{progressMessages.geocode}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Upload Data Section */}\r\n          <div style={styles.section}>\r\n            <h3 style={styles.sectionTitle}>Upload Data</h3>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".json, .csv\"\r\n              onChange={handleFileUpload}\r\n              style={styles.fileInput}\r\n            />\r\n          </div>\r\n\r\n          {/* Mark Locations Button */}\r\n          {geoData.length > 0 && !markersAdded && (\r\n            <div style={styles.section}>\r\n              <button\r\n                onClick={renderMarkers}\r\n                style={{\r\n                  ...styles.chartButton,\r\n                  backgroundColor: '#17a2b8',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                Mark Locations on Map\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Dataset Details Section */}\r\n          <div style={styles.section}>\r\n            <h3 style={styles.sectionTitle}>Dataset Details</h3>\r\n            {geoData.length > 0 ? (\r\n              <div style={styles.datasetDetails}>\r\n                <p>\r\n                  <strong>States:</strong> {totalRows}\r\n                </p>\r\n                <p>\r\n                  <strong>Columns:</strong> {totalColumns}\r\n                </p>\r\n                <p>\r\n                  <strong>Numeric Columns:</strong> {numericHeaders.join(', ')}\r\n                </p>\r\n                <p>\r\n                  <strong>String Columns:</strong> {stringHeaders.join(', ')}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>No dataset uploaded yet.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Location Comparison Section */}\r\n          <div style={styles.section}>\r\n            <h3 style={styles.sectionTitle}>Compare Two States</h3>\r\n            <div style={styles.inputGroup}>\r\n              <label style={styles.inputLabel}>State 1:</label>\r\n              <select\r\n                value={selectedState1}\r\n                onChange={(e) => setSelectedState1(e.target.value)}\r\n                style={styles.selectDropdown}\r\n                disabled={stateList.length === 0}\r\n              >\r\n                <option value=\"\">Select State</option>\r\n                {stateList.map((state) => (\r\n                  <option key={state} value={state}>\r\n                    {state}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div style={styles.inputGroup}>\r\n              <label style={styles.inputLabel}>State 2:</label>\r\n              <select\r\n                value={selectedState2}\r\n                onChange={(e) => setSelectedState2(e.target.value)}\r\n                style={styles.selectDropdown}\r\n                disabled={stateList.length === 0}\r\n              >\r\n                <option value=\"\">Select State</option>\r\n                {stateList.map((state) => (\r\n                  <option key={state} value={state}>\r\n                    {state}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button\r\n              onClick={handleStateSelection}\r\n              disabled={!selectedState1 || !selectedState2}\r\n              style={{\r\n                ...styles.chartButton,\r\n                backgroundColor:\r\n                  selectedState1 && selectedState2 ? '#28a745' : '#6c757d',\r\n              }}\r\n            >\r\n              Compare\r\n            </button>\r\n\r\n            {/* New Mark on Map Button */}\r\n            {compareMarkersEnabled && (\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button\r\n                  onClick={renderSelectedMarkers}\r\n                  style={{\r\n                    ...styles.chartButton,\r\n                    backgroundColor: '#17a2b8',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  Mark Selected States on Map\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Chart Type Selection Section */}\r\n          <div style={styles.section}>\r\n            <h3 style={styles.sectionTitle}>Select Chart Type</h3>\r\n            <div style={styles.chartOptions}>\r\n              <button\r\n                onClick={() => setChartType('Bar')}\r\n                style={{\r\n                  ...styles.chartButton,\r\n                  ...(chartType === 'Bar' ? styles.chartButtonActive : {}),\r\n                }}\r\n              >\r\n                Bar Chart\r\n              </button>\r\n              <button\r\n                onClick={() => setChartType('Pie')}\r\n                style={{\r\n                  ...styles.chartButton,\r\n                  ...(chartType === 'Pie' ? styles.chartButtonActive : {}),\r\n                }}\r\n              >\r\n                Pie Chart\r\n              </button>\r\n              <button\r\n                onClick={() => setChartType('Doughnut')}\r\n                style={{\r\n                  ...styles.chartButton,\r\n                  ...(chartType === 'Doughnut' ? styles.chartButtonActive : {}),\r\n                }}\r\n              >\r\n                Doughnut Chart\r\n              </button>\r\n              <button\r\n                onClick={() => setChartType('PolarArea')}\r\n                style={{\r\n                  ...styles.chartButton,\r\n                  ...(chartType === 'PolarArea' ? styles.chartButtonActive : {}),\r\n                }}\r\n              >\r\n                PolarArea Chart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chart Display Section */}\r\n        {chartData && (\r\n          <div style={styles.chartContainer}>\r\n            <div style={styles.chartWrapper}>\r\n              <div style={styles.chartContent}>\r\n                <h3>{chartType} Chart</h3>\r\n                {chartType === 'Bar' && <Bar data={chartData} options={chartOptions} />}\r\n                {chartType === 'Pie' && <Pie data={chartData} options={chartOptions} />}\r\n                {chartType === 'Doughnut' && (\r\n                  <Doughnut data={chartData} options={chartOptions} />\r\n                )}\r\n                {chartType === 'PolarArea' && (\r\n                  <PolarArea data={chartData} options={chartOptions} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}