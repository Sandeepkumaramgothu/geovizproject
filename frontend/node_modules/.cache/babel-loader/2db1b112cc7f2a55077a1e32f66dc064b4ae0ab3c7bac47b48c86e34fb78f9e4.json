{"ast":null,"code":"/*! dom-to-image-more 16-10-2024 */\n(l => {\n  let f = (() => {\n      let e = 0;\n      return {\n        escape: function (e) {\n          return e.replace(/([.*+?^${}()|[\\]/\\\\])/g, \"\\\\$1\");\n        },\n        isDataUrl: function (e) {\n          return -1 !== e.search(/^(data:)/);\n        },\n        canvasToBlob: function (t) {\n          if (t.toBlob) return new Promise(function (e) {\n            t.toBlob(e);\n          });\n          return (r => new Promise(function (e) {\n            var t = u(r.toDataURL().split(\",\")[1]),\n              n = t.length,\n              o = new Uint8Array(n);\n            for (let e = 0; e < n; e++) o[e] = t.charCodeAt(e);\n            e(new Blob([o], {\n              type: \"image/png\"\n            }));\n          }))(t);\n        },\n        resolveUrl: function (e, t) {\n          var n = document.implementation.createHTMLDocument(),\n            o = n.createElement(\"base\"),\n            r = (n.head.appendChild(o), n.createElement(\"a\"));\n          return n.body.appendChild(r), o.href = t, r.href = e, r.href;\n        },\n        getAndEncode: function (s) {\n          let e = a.impl.urlCache.find(function (e) {\n            return e.url === s;\n          });\n          e || (e = {\n            url: s,\n            promise: null\n          }, a.impl.urlCache.push(e));\n          null === e.promise && (a.impl.options.cacheBust && (s += (/\\?/.test(s) ? \"&\" : \"?\") + new Date().getTime()), e.promise = new Promise(function (t) {\n            let e = a.impl.options.httpTimeout,\n              r = new XMLHttpRequest();\n            if (r.onreadystatechange = function () {\n              if (4 === r.readyState) if (300 <= r.status) n ? t(n) : l(`cannot fetch resource: ${s}, status: ` + r.status);else {\n                let e = new FileReader();\n                e.onloadend = function () {\n                  t(e.result);\n                }, e.readAsDataURL(r.response);\n              }\n            }, r.ontimeout = function () {\n              n ? t(n) : l(`timeout of ${e}ms occured while fetching resource: ` + s);\n            }, r.responseType = \"blob\", r.timeout = e, 0 < a.impl.options.useCredentialsFilters.length && (a.impl.options.useCredentials = 0 < a.impl.options.useCredentialsFilters.filter(e => 0 <= s.search(e)).length), a.impl.options.useCredentials && (r.withCredentials = !0), a.impl.options.corsImg && 0 === s.indexOf(\"http\") && -1 === s.indexOf(window.location.origin)) {\n              var i = \"POST\" === (a.impl.options.corsImg.method || \"GET\").toUpperCase() ? \"POST\" : \"GET\";\n              r.open(i, (a.impl.options.corsImg.url || \"\").replace(\"#{cors}\", s), !0);\n              let t = !1,\n                n = a.impl.options.corsImg.headers || {},\n                o = (Object.keys(n).forEach(function (e) {\n                  -1 !== n[e].indexOf(\"application/json\") && (t = !0), r.setRequestHeader(e, n[e]);\n                }), (e => {\n                  try {\n                    return JSON.parse(JSON.stringify(e));\n                  } catch (e) {\n                    l(\"corsImg.data is missing or invalid:\" + e.toString());\n                  }\n                })(a.impl.options.corsImg.data || \"\"));\n              Object.keys(o).forEach(function (e) {\n                \"string\" == typeof o[e] && (o[e] = o[e].replace(\"#{cors}\", s));\n              }), r.send(t ? JSON.stringify(o) : o);\n            } else r.open(\"GET\", s, !0), r.send();\n            let n;\n            function l(e) {\n              console.error(e), t(\"\");\n            }\n            a.impl.options.imagePlaceholder && (i = a.impl.options.imagePlaceholder.split(/,/)) && i[1] && (n = i[1]);\n          }));\n          return e.promise;\n        },\n        uid: function () {\n          return \"u\" + (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) + e++;\n        },\n        delay: function (n) {\n          return function (t) {\n            return new Promise(function (e) {\n              setTimeout(function () {\n                e(t);\n              }, n);\n            });\n          };\n        },\n        asArray: function (t) {\n          var n = [],\n            o = t.length;\n          for (let e = 0; e < o; e++) n.push(t[e]);\n          return n;\n        },\n        escapeXhtml: function (e) {\n          return e.replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/\\n/g, \"%0A\");\n        },\n        makeImage: function (r) {\n          return \"data:,\" !== r ? new Promise(function (e, t) {\n            let n = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\"),\n              o = new Image();\n            a.impl.options.useCredentials && (o.crossOrigin = \"use-credentials\"), o.onload = function () {\n              document.body.removeChild(n), window && window.requestAnimationFrame ? window.requestAnimationFrame(function () {\n                e(o);\n              }) : e(o);\n            }, o.onerror = e => {\n              document.body.removeChild(n), t(e);\n            }, n.appendChild(o), o.src = r, document.body.appendChild(n);\n          }) : Promise.resolve();\n        },\n        width: function (e) {\n          var t = i(e, \"width\");\n          if (!isNaN(t)) return t;\n          var t = i(e, \"border-left-width\"),\n            n = i(e, \"border-right-width\");\n          return e.scrollWidth + t + n;\n        },\n        height: function (e) {\n          var t = i(e, \"height\");\n          if (!isNaN(t)) return t;\n          var t = i(e, \"border-top-width\"),\n            n = i(e, \"border-bottom-width\");\n          return e.scrollHeight + t + n;\n        },\n        getWindow: t,\n        isElement: r,\n        isElementHostForOpenShadowRoot: function (e) {\n          return r(e) && null !== e.shadowRoot;\n        },\n        isShadowRoot: n,\n        isInShadowRoot: o,\n        isHTMLElement: function (e) {\n          return e instanceof t(e).HTMLElement;\n        },\n        isHTMLCanvasElement: function (e) {\n          return e instanceof t(e).HTMLCanvasElement;\n        },\n        isHTMLInputElement: function (e) {\n          return e instanceof t(e).HTMLInputElement;\n        },\n        isHTMLImageElement: function (e) {\n          return e instanceof t(e).HTMLImageElement;\n        },\n        isHTMLLinkElement: function (e) {\n          return e instanceof t(e).HTMLLinkElement;\n        },\n        isHTMLScriptElement: function (e) {\n          return e instanceof t(e).HTMLScriptElement;\n        },\n        isHTMLStyleElement: function (e) {\n          return e instanceof t(e).HTMLStyleElement;\n        },\n        isHTMLTextAreaElement: function (e) {\n          return e instanceof t(e).HTMLTextAreaElement;\n        },\n        isShadowSlotElement: function (e) {\n          return o(e) && e instanceof t(e).HTMLSlotElement;\n        },\n        isSVGElement: function (e) {\n          return e instanceof t(e).SVGElement;\n        },\n        isSVGRectElement: function (e) {\n          return e instanceof t(e).SVGRectElement;\n        },\n        isDimensionMissing: function (e) {\n          return isNaN(e) || e <= 0;\n        }\n      };\n      function t(e) {\n        e = e ? e.ownerDocument : void 0;\n        return (e ? e.defaultView : void 0) || window || l;\n      }\n      function n(e) {\n        return e instanceof t(e).ShadowRoot;\n      }\n      function o(e) {\n        return null != e && void 0 !== e.getRootNode && n(e.getRootNode());\n      }\n      function r(e) {\n        return e instanceof t(e).Element;\n      }\n      function i(t, n) {\n        if (t.nodeType === c) {\n          let e = m(t).getPropertyValue(n);\n          if (\"px\" === e.slice(-2)) return e = e.slice(0, -2), parseFloat(e);\n        }\n        return NaN;\n      }\n    })(),\n    r = (() => {\n      let o = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n      return {\n        inlineAll: function (t, o, r) {\n          if (!e(t)) return Promise.resolve(t);\n          return Promise.resolve(t).then(n).then(function (e) {\n            let n = Promise.resolve(t);\n            return e.forEach(function (t) {\n              n = n.then(function (e) {\n                return i(e, t, o, r);\n              });\n            }), n;\n          });\n        },\n        shouldProcess: e,\n        impl: {\n          readUrls: n,\n          inline: i\n        }\n      };\n      function e(e) {\n        return -1 !== e.search(o);\n      }\n      function n(e) {\n        for (var t, n = []; null !== (t = o.exec(e));) n.push(t[1]);\n        return n.filter(function (e) {\n          return !f.isDataUrl(e);\n        });\n      }\n      function i(n, o, t, e) {\n        return Promise.resolve(o).then(function (e) {\n          return t ? f.resolveUrl(e, t) : e;\n        }).then(e || f.getAndEncode).then(function (e) {\n          return n.replace((t = o, new RegExp(`(url\\\\(['\"]?)(${f.escape(t)})(['\"]?\\\\))`, \"g\")), `$1${e}$3`);\n          var t;\n        });\n      }\n    })(),\n    e = {\n      resolveAll: function () {\n        return t().then(function (e) {\n          return Promise.all(e.map(function (e) {\n            return e.resolve();\n          }));\n        }).then(function (e) {\n          return e.join(\"\\n\");\n        });\n      },\n      impl: {\n        readAll: t\n      }\n    };\n  function t() {\n    return Promise.resolve(f.asArray(document.styleSheets)).then(function (e) {\n      let n = [];\n      return e.forEach(function (t) {\n        var e = Object.getPrototypeOf(t);\n        if (Object.prototype.hasOwnProperty.call(e, \"cssRules\")) try {\n          f.asArray(t.cssRules || []).forEach(n.push.bind(n));\n        } catch (e) {\n          console.error(\"domtoimage: Error while reading CSS rules from \" + t.href, e.toString());\n        }\n      }), n;\n    }).then(function (e) {\n      return e.filter(function (e) {\n        return e.type === CSSRule.FONT_FACE_RULE;\n      }).filter(function (e) {\n        return r.shouldProcess(e.style.getPropertyValue(\"src\"));\n      });\n    }).then(function (e) {\n      return e.map(t);\n    });\n    function t(t) {\n      return {\n        resolve: function () {\n          var e = (t.parentStyleSheet || {}).href;\n          return r.inlineAll(t.cssText, e);\n        },\n        src: function () {\n          return t.style.getPropertyValue(\"src\");\n        }\n      };\n    }\n  }\n  let n = {\n    inlineAll: function t(e) {\n      if (!f.isElement(e)) return Promise.resolve(e);\n      return n(e).then(function () {\n        return f.isHTMLImageElement(e) ? o(e).inline() : Promise.all(f.asArray(e.childNodes).map(function (e) {\n          return t(e);\n        }));\n      });\n      function n(o) {\n        let e = [\"background\", \"background-image\"],\n          t = e.map(function (t) {\n            let e = o.style.getPropertyValue(t),\n              n = o.style.getPropertyPriority(t);\n            return e ? r.inlineAll(e).then(function (e) {\n              o.style.setProperty(t, e, n);\n            }) : Promise.resolve();\n          });\n        return Promise.all(t).then(function () {\n          return o;\n        });\n      }\n    },\n    impl: {\n      newImage: o\n    }\n  };\n  function o(n) {\n    return {\n      inline: function (e) {\n        if (f.isDataUrl(n.src)) return Promise.resolve();\n        return Promise.resolve(n.src).then(e || f.getAndEncode).then(function (t) {\n          return new Promise(function (e) {\n            n.onload = e, n.onerror = e, n.src = t;\n          });\n        });\n      }\n    };\n  }\n  let s = {\n      copyDefaultStyles: !0,\n      imagePlaceholder: void 0,\n      cacheBust: !1,\n      useCredentials: !1,\n      useCredentialsFilters: [],\n      httpTimeout: 3e4,\n      styleCaching: \"strict\",\n      corsImg: void 0,\n      adjustClonedNode: void 0\n    },\n    a = {\n      toSvg: d,\n      toPng: function (e, t) {\n        return i(e, t).then(function (e) {\n          return e.toDataURL();\n        });\n      },\n      toJpeg: function (e, t) {\n        return i(e, t).then(function (e) {\n          return e.toDataURL(\"image/jpeg\", (t ? t.quality : void 0) || 1);\n        });\n      },\n      toBlob: function (e, t) {\n        return i(e, t).then(f.canvasToBlob);\n      },\n      toPixelData: function (t, e) {\n        return i(t, e).then(function (e) {\n          return e.getContext(\"2d\").getImageData(0, 0, f.width(t), f.height(t)).data;\n        });\n      },\n      toCanvas: i,\n      impl: {\n        fontFaces: e,\n        images: n,\n        util: f,\n        inliner: r,\n        urlCache: [],\n        options: {}\n      }\n    },\n    c = (\"object\" == typeof exports && \"object\" == typeof module ? module.exports = a : l.domtoimage = a, (\"undefined\" != typeof Node ? Node.ELEMENT_NODE : void 0) || 1),\n    m = (void 0 !== l ? l.getComputedStyle : void 0) || (\"undefined\" != typeof window ? window.getComputedStyle : void 0) || globalThis.getComputedStyle,\n    u = (void 0 !== l ? l.atob : void 0) || (\"undefined\" != typeof window ? window.atob : void 0) || globalThis.atob;\n  function d(e, r) {\n    let t = a.impl.util.getWindow(e);\n    var n = r = r || {};\n    void 0 === n.copyDefaultStyles ? a.impl.options.copyDefaultStyles = s.copyDefaultStyles : a.impl.options.copyDefaultStyles = n.copyDefaultStyles, a.impl.options.imagePlaceholder = (void 0 === n.imagePlaceholder ? s : n).imagePlaceholder, a.impl.options.cacheBust = (void 0 === n.cacheBust ? s : n).cacheBust, a.impl.options.corsImg = (void 0 === n.corsImg ? s : n).corsImg, a.impl.options.useCredentials = (void 0 === n.useCredentials ? s : n).useCredentials, a.impl.options.useCredentialsFilters = (void 0 === n.useCredentialsFilters ? s : n).useCredentialsFilters, a.impl.options.httpTimeout = (void 0 === n.httpTimeout ? s : n).httpTimeout, a.impl.options.styleCaching = (void 0 === n.styleCaching ? s : n).styleCaching;\n    let i = [];\n    return Promise.resolve(e).then(function (e) {\n      if (e.nodeType === c) return e;\n      var t = e,\n        n = e.parentNode,\n        o = document.createElement(\"span\");\n      return n.replaceChild(o, t), o.append(e), i.push({\n        parent: n,\n        child: t,\n        wrapper: o\n      }), o;\n    }).then(function (e) {\n      return function l(t, s, r, u) {\n        let e = s.filter;\n        if (t === h || f.isHTMLScriptElement(t) || f.isHTMLStyleElement(t) || f.isHTMLLinkElement(t) || null !== r && e && !e(t)) return Promise.resolve();\n        return Promise.resolve(t).then(n).then(o).then(function (e) {\n          return c(e, a(t));\n        }).then(i).then(function (e) {\n          return d(e, t);\n        });\n        function n(e) {\n          return f.isHTMLCanvasElement(e) ? f.makeImage(e.toDataURL()) : e.cloneNode(!1);\n        }\n        function o(e) {\n          return s.adjustClonedNode && s.adjustClonedNode(t, e, !1), Promise.resolve(e);\n        }\n        function i(e) {\n          return s.adjustClonedNode && s.adjustClonedNode(t, e, !0), Promise.resolve(e);\n        }\n        function a(e) {\n          return f.isElementHostForOpenShadowRoot(e) ? e.shadowRoot : e;\n        }\n        function c(n, e) {\n          let o = t(e),\n            r = Promise.resolve();\n          if (0 !== o.length) {\n            let t = m(i(e));\n            f.asArray(o).forEach(function (e) {\n              r = r.then(function () {\n                return l(e, s, t, u).then(function (e) {\n                  e && n.appendChild(e);\n                });\n              });\n            });\n          }\n          return r.then(function () {\n            return n;\n          });\n          function i(e) {\n            return f.isShadowRoot(e) ? e.host : e;\n          }\n          function t(t) {\n            if (f.isShadowSlotElement(t)) {\n              let e = t.assignedNodes();\n              if (e && 0 < e.length) return e;\n            }\n            return t.childNodes;\n          }\n        }\n        function d(u, a) {\n          return !f.isElement(u) || f.isShadowSlotElement(a) ? Promise.resolve(u) : Promise.resolve().then(e).then(t).then(n).then(o).then(function () {\n            return u;\n          });\n          function e() {\n            function o(e, t) {\n              t.font = e.font, t.fontFamily = e.fontFamily, t.fontFeatureSettings = e.fontFeatureSettings, t.fontKerning = e.fontKerning, t.fontSize = e.fontSize, t.fontStretch = e.fontStretch, t.fontStyle = e.fontStyle, t.fontVariant = e.fontVariant, t.fontVariantCaps = e.fontVariantCaps, t.fontVariantEastAsian = e.fontVariantEastAsian, t.fontVariantLigatures = e.fontVariantLigatures, t.fontVariantNumeric = e.fontVariantNumeric, t.fontVariationSettings = e.fontVariationSettings, t.fontWeight = e.fontWeight;\n            }\n            function e(e, t) {\n              let n = m(e);\n              n.cssText ? (t.style.cssText = n.cssText, o(n, t.style)) : (y(s, e, n, r, t), null === r && ([\"inset-block\", \"inset-block-start\", \"inset-block-end\"].forEach(e => t.style.removeProperty(e)), [\"left\", \"right\", \"top\", \"bottom\"].forEach(e => {\n                t.style.getPropertyValue(e) && t.style.setProperty(e, \"0px\");\n              })));\n            }\n            e(a, u);\n          }\n          function t() {\n            let s = f.uid();\n            function t(r) {\n              let i = m(a, r),\n                l = i.getPropertyValue(\"content\");\n              if (\"\" !== l && \"none\" !== l) {\n                let e = u.getAttribute(\"class\") || \"\",\n                  t = (u.setAttribute(\"class\", e + \" \" + s), document.createElement(\"style\"));\n                function n() {\n                  let e = `.${s}:` + r,\n                    t = (i.cssText ? n : o)();\n                  return document.createTextNode(e + `{${t}}`);\n                  function n() {\n                    return `${i.cssText} content: ${l};`;\n                  }\n                  function o() {\n                    let e = f.asArray(i).map(t).join(\"; \");\n                    return e + \";\";\n                    function t(e) {\n                      let t = i.getPropertyValue(e),\n                        n = i.getPropertyPriority(e) ? \" !important\" : \"\";\n                      return e + \": \" + t + n;\n                    }\n                  }\n                }\n                t.appendChild(n()), u.appendChild(t);\n              }\n            }\n            [\":before\", \":after\"].forEach(function (e) {\n              t(e);\n            });\n          }\n          function n() {\n            f.isHTMLTextAreaElement(a) && (u.innerHTML = a.value), f.isHTMLInputElement(a) && u.setAttribute(\"value\", a.value);\n          }\n          function o() {\n            f.isSVGElement(u) && (u.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"), f.isSVGRectElement(u)) && [\"width\", \"height\"].forEach(function (e) {\n              let t = u.getAttribute(e);\n              t && u.style.setProperty(e, t);\n            });\n          }\n        }\n      }(e, r, null, t);\n    }).then(r.disableEmbedFonts ? Promise.resolve(e) : p).then(g).then(function (t) {\n      r.bgcolor && (t.style.backgroundColor = r.bgcolor);\n      r.width && (t.style.width = r.width + \"px\");\n      r.height && (t.style.height = r.height + \"px\");\n      r.style && Object.keys(r.style).forEach(function (e) {\n        t.style[e] = r.style[e];\n      });\n      let e = null;\n      \"function\" == typeof r.onclone && (e = r.onclone(t));\n      return Promise.resolve(e).then(function () {\n        return t;\n      });\n    }).then(function (e) {\n      let n = r.width || f.width(e),\n        o = r.height || f.height(e);\n      return Promise.resolve(e).then(function (e) {\n        return e.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\"), new XMLSerializer().serializeToString(e);\n      }).then(f.escapeXhtml).then(function (e) {\n        var t = (f.isDimensionMissing(n) ? ' width=\"100%\"' : ` width=\"${n}\"`) + (f.isDimensionMissing(o) ? ' height=\"100%\"' : ` height=\"${o}\"`);\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\"${(f.isDimensionMissing(n) ? \"\" : ` width=\"${n}\"`) + (f.isDimensionMissing(o) ? \"\" : ` height=\"${o}\"`)}><foreignObject${t}>${e}</foreignObject></svg>`;\n      }).then(function (e) {\n        return \"data:image/svg+xml;charset=utf-8,\" + e;\n      });\n    }).then(function (e) {\n      for (; 0 < i.length;) {\n        var t = i.pop();\n        t.parent.replaceChild(t.child, t.wrapper);\n      }\n      return e;\n    }).then(function (e) {\n      return a.impl.urlCache = [], (() => {\n        h && (document.body.removeChild(h), h = null), v && clearTimeout(v), v = setTimeout(() => {\n          v = null, w = {};\n        }, 2e4);\n      })(), e;\n    });\n  }\n  function i(r, i) {\n    return d(r, i = i || {}).then(f.makeImage).then(function (e) {\n      var t = \"number\" != typeof i.scale ? 1 : i.scale,\n        n = ((e, t) => {\n          let n = i.width || f.width(e),\n            o = i.height || f.height(e);\n          return f.isDimensionMissing(n) && (n = f.isDimensionMissing(o) ? 300 : 2 * o), f.isDimensionMissing(o) && (o = n / 2), (e = document.createElement(\"canvas\")).width = n * t, e.height = o * t, i.bgcolor && ((t = e.getContext(\"2d\")).fillStyle = i.bgcolor, t.fillRect(0, 0, e.width, e.height)), e;\n        })(r, t),\n        o = n.getContext(\"2d\");\n      return o.msImageSmoothingEnabled = !1, o.imageSmoothingEnabled = !1, e && (o.scale(t, t), o.drawImage(e, 0, 0)), n;\n    });\n  }\n  let h = null;\n  function p(n) {\n    return e.resolveAll().then(function (e) {\n      var t;\n      return \"\" !== e && (t = document.createElement(\"style\"), n.appendChild(t), t.appendChild(document.createTextNode(e))), n;\n    });\n  }\n  function g(e) {\n    return n.inlineAll(e).then(function () {\n      return e;\n    });\n  }\n  function y(e, t, i, l, n) {\n    let s = a.impl.options.copyDefaultStyles ? ((t, e) => {\n        var n,\n          o = (e => (\"relaxed\" !== t.styleCaching ? e : e.filter((e, t, n) => 0 === t || t === n.length - 1)).join(\">\"))(e = (e => {\n            var t = [];\n            do {\n              if (e.nodeType === c) {\n                var n = e.tagName;\n                if (t.push(n), E.includes(n)) break;\n              }\n            } while (e = e.parentNode);\n            return t;\n          })(e));\n        {\n          if (w[o]) return w[o];\n          e = ((e, t) => {\n            let n = e.body;\n            do {\n              var o = t.pop(),\n                o = e.createElement(o);\n              n.appendChild(o), n = o;\n            } while (0 < t.length);\n            return n.textContent = \"​\", n;\n          })((n = (() => {\n            if (h) return h.contentWindow;\n            t = document.characterSet || \"UTF-8\", e = (e = document.doctype) ? (`<!DOCTYPE ${s(e.name)} ${s(e.publicId)} ` + s(e.systemId)).trim() + \">\" : \"\", (h = document.createElement(\"iframe\")).id = \"domtoimage-sandbox-\" + f.uid(), h.style.visibility = \"hidden\", h.style.position = \"fixed\", document.body.appendChild(h);\n            var e,\n              t,\n              n = h,\n              o = \"domtoimage-sandbox\";\n            try {\n              return n.contentWindow.document.write(e + `<html><head><meta charset='${t}'><title>${o}</title></head><body></body></html>`), n.contentWindow;\n            } catch (e) {}\n            var r = document.createElement(\"meta\");\n            r.setAttribute(\"charset\", t);\n            try {\n              var i = document.implementation.createHTMLDocument(o),\n                l = (i.head.appendChild(r), e + i.documentElement.outerHTML);\n              return n.setAttribute(\"srcdoc\", l), n.contentWindow;\n            } catch (e) {}\n            return n.contentDocument.head.appendChild(r), n.contentDocument.title = o, n.contentWindow;\n            function s(e) {\n              var t;\n              return e ? ((t = document.createElement(\"div\")).innerText = e, t.innerHTML) : \"\";\n            }\n          })()).document, e), n = ((e, t) => {\n            let n = {},\n              o = e.getComputedStyle(t);\n            return f.asArray(o).forEach(function (e) {\n              n[e] = \"width\" === e || \"height\" === e ? \"auto\" : o.getPropertyValue(e);\n            }), n;\n          })(n, e);\n          var r = e;\n          do {\n            var i = r.parentElement;\n            null !== i && i.removeChild(r), r = i;\n          } while (r && \"BODY\" !== r.tagName);\n          return w[o] = n;\n        }\n      })(e, t) : {},\n      u = n.style;\n    f.asArray(i).forEach(function (e) {\n      var t,\n        n = i.getPropertyValue(e),\n        o = s[e],\n        r = l ? l.getPropertyValue(e) : void 0;\n      u.getPropertyValue(e) || (n !== o || l && n !== r) && (o = i.getPropertyPriority(e), r = u, n = n, o = o, t = 0 <= [\"background-clip\"].indexOf(e = e), o ? (r.setProperty(e, n, o), t && r.setProperty(\"-webkit-\" + e, n, o)) : (r.setProperty(e, n), t && r.setProperty(\"-webkit-\" + e, n)));\n    });\n  }\n  let v = null,\n    w = {},\n    E = [\"ADDRESS\", \"ARTICLE\", \"ASIDE\", \"BLOCKQUOTE\", \"DETAILS\", \"DIALOG\", \"DD\", \"DIV\", \"DL\", \"DT\", \"FIELDSET\", \"FIGCAPTION\", \"FIGURE\", \"FOOTER\", \"FORM\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"HEADER\", \"HGROUP\", \"HR\", \"LI\", \"MAIN\", \"NAV\", \"OL\", \"P\", \"PRE\", \"SECTION\", \"SVG\", \"TABLE\", \"UL\", \"math\", \"svg\", \"BODY\", \"HEAD\", \"HTML\"];\n})(this);","map":{"version":3,"names":["l","f","e","escape","replace","isDataUrl","search","canvasToBlob","t","toBlob","Promise","r","u","toDataURL","split","n","length","o","Uint8Array","charCodeAt","Blob","type","resolveUrl","document","implementation","createHTMLDocument","createElement","head","appendChild","body","href","getAndEncode","s","a","impl","urlCache","find","url","promise","push","options","cacheBust","test","Date","getTime","httpTimeout","XMLHttpRequest","onreadystatechange","readyState","status","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","useCredentialsFilters","useCredentials","filter","withCredentials","corsImg","indexOf","window","location","origin","i","method","toUpperCase","open","headers","Object","keys","forEach","setRequestHeader","JSON","parse","stringify","toString","data","send","console","error","imagePlaceholder","uid","Math","random","pow","slice","delay","setTimeout","asArray","escapeXhtml","makeImage","createElementNS","Image","crossOrigin","onload","removeChild","requestAnimationFrame","onerror","src","resolve","width","isNaN","scrollWidth","height","scrollHeight","getWindow","isElement","isElementHostForOpenShadowRoot","shadowRoot","isShadowRoot","isInShadowRoot","isHTMLElement","HTMLElement","isHTMLCanvasElement","HTMLCanvasElement","isHTMLInputElement","HTMLInputElement","isHTMLImageElement","HTMLImageElement","isHTMLLinkElement","HTMLLinkElement","isHTMLScriptElement","HTMLScriptElement","isHTMLStyleElement","HTMLStyleElement","isHTMLTextAreaElement","HTMLTextAreaElement","isShadowSlotElement","HTMLSlotElement","isSVGElement","SVGElement","isSVGRectElement","SVGRectElement","isDimensionMissing","ownerDocument","defaultView","ShadowRoot","getRootNode","Element","nodeType","c","m","getPropertyValue","parseFloat","NaN","inlineAll","then","shouldProcess","readUrls","inline","exec","RegExp","resolveAll","all","map","join","readAll","styleSheets","getPrototypeOf","prototype","hasOwnProperty","call","cssRules","bind","CSSRule","FONT_FACE_RULE","style","parentStyleSheet","cssText","childNodes","getPropertyPriority","setProperty","newImage","copyDefaultStyles","styleCaching","adjustClonedNode","toSvg","d","toPng","toJpeg","quality","toPixelData","getContext","getImageData","toCanvas","fontFaces","images","util","inliner","exports","module","domtoimage","Node","ELEMENT_NODE","getComputedStyle","globalThis","atob","parentNode","replaceChild","append","parent","child","wrapper","h","cloneNode","host","assignedNodes","font","fontFamily","fontFeatureSettings","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantCaps","fontVariantEastAsian","fontVariantLigatures","fontVariantNumeric","fontVariationSettings","fontWeight","y","removeProperty","getAttribute","setAttribute","createTextNode","innerHTML","value","disableEmbedFonts","p","g","bgcolor","backgroundColor","onclone","XMLSerializer","serializeToString","pop","v","clearTimeout","w","scale","fillStyle","fillRect","msImageSmoothingEnabled","imageSmoothingEnabled","drawImage","tagName","E","includes","textContent","contentWindow","characterSet","doctype","name","publicId","systemId","trim","id","visibility","position","write","documentElement","outerHTML","contentDocument","title","innerText","parentElement"],"sources":["/Users/girishkumarpatchikoru/Desktop/projecthci/geovizproject/frontend/node_modules/dom-to-image-more/src/dom-to-image-more.js"],"sourcesContent":["(function (global) {\n    'use strict';\n\n    const util = newUtil();\n    const inliner = newInliner();\n    const fontFaces = newFontFaces();\n    const images = newImages();\n\n    // Default impl options\n    const defaultOptions = {\n        // Default is to copy default styles of elements\n        copyDefaultStyles: true,\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests)\n        useCredentials: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests) on some filtered requests only\n        useCredentialsFilters: [],\n        // Default resolve timeout\n        httpTimeout: 30000,\n        // Style computation cache tag rules (options are strict, relaxed)\n        styleCaching: 'strict',\n        // Default cors config is to request the image address directly\n        corsImg: undefined,\n        // Callback for adjustClonedNode eventing (to allow adjusting clone's properties)\n        adjustClonedNode: undefined,\n    };\n\n    const domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        toCanvas: toCanvas,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            urlCache: [],\n            options: {},\n        },\n    };\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = domtoimage; // eslint-disable-line no-undef\n    } else {\n        global.domtoimage = domtoimage;\n    }\n\n    // support node and browsers\n    const ELEMENT_NODE =\n        (typeof Node !== 'undefined' ? Node.ELEMENT_NODE : undefined) || 1;\n    const getComputedStyle =\n        (typeof global !== 'undefined' ? global.getComputedStyle : undefined) ||\n        (typeof window !== 'undefined' ? window.getComputedStyle : undefined) ||\n        globalThis.getComputedStyle;\n    const atob =\n        (typeof global !== 'undefined' ? global.atob : undefined) ||\n        (typeof window !== 'undefined' ? window.atob : undefined) ||\n        globalThis.atob;\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {Function} options.onclone - Callback function which is called when the Document has been cloned for\n     *         rendering, can be used to modify the contents that will be rendered without affecting the original\n     *         source document.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {Number} options.scale - a Number multiplier to scale up the canvas before rendering to reduce fuzzy images, defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @param {String} options.styleCaching - set to 'strict', 'relaxed' to select style caching rules\n     * @param {Boolean} options.copyDefaultStyles - set to false to disable use of default styles of elements\n     * @param {Boolean} options.disableEmbedFonts - set to true to disable font embedding into the SVG output.\n     * @param {Object} options.corsImg - When the image is restricted by the server from cross-domain requests, the proxy address is passed in to get the image\n     *         - @param {String} url - eg: https://cors-anywhere.herokuapp.com/\n     *         - @param {Enumerator} method - get, post\n     *         - @param {Object} headers - eg: { \"Content-Type\", \"application/json;charset=UTF-8\" }\n     *         - @param {Object} data - post payload\n     * @param {Function} options.adjustClonedNode - callback for adjustClonedNode eventing (to allow adjusting clone's properties)\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        const ownerWindow = domtoimage.impl.util.getWindow(node);\n        options = options || {};\n        copyOptions(options);\n        let restorations = [];\n\n        return Promise.resolve(node)\n            .then(ensureElement)\n            .then(function (clonee) {\n                return cloneNode(clonee, options, null, ownerWindow);\n            })\n            .then(options.disableEmbedFonts ? Promise.resolve(node) : embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(makeSvgDataUri)\n            .then(restoreWrappers)\n            .then(clearCache);\n\n        function ensureElement(node) {\n            if (node.nodeType === ELEMENT_NODE) return node;\n\n            const originalChild = node;\n            const originalParent = node.parentNode;\n            const wrappingSpan = document.createElement('span');\n            originalParent.replaceChild(wrappingSpan, originalChild);\n            wrappingSpan.append(node);\n            restorations.push({\n                parent: originalParent,\n                child: originalChild,\n                wrapper: wrappingSpan,\n            });\n            return wrappingSpan;\n        }\n\n        function restoreWrappers(result) {\n            // put the original children back where the wrappers were inserted\n            while (restorations.length > 0) {\n                const restoration = restorations.pop();\n                restoration.parent.replaceChild(restoration.child, restoration.wrapper);\n            }\n\n            return result;\n        }\n\n        function clearCache(result) {\n            domtoimage.impl.urlCache = [];\n            removeSandbox();\n            return result;\n        }\n\n        function applyOptions(clone) {\n            if (options.bgcolor) {\n                clone.style.backgroundColor = options.bgcolor;\n            }\n            if (options.width) {\n                clone.style.width = `${options.width}px`;\n            }\n            if (options.height) {\n                clone.style.height = `${options.height}px`;\n            }\n            if (options.style) {\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n            }\n\n            let onCloneResult = null;\n\n            if (typeof options.onclone === 'function') {\n                onCloneResult = options.onclone(clone);\n            }\n\n            return Promise.resolve(onCloneResult).then(function () {\n                return clone;\n            });\n        }\n\n        function makeSvgDataUri(node) {\n            let width = options.width || util.width(node);\n            let height = options.height || util.height(node);\n\n            return Promise.resolve(node)\n                .then(function (svg) {\n                    svg.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                    return new XMLSerializer().serializeToString(svg);\n                })\n                .then(util.escapeXhtml)\n                .then(function (xhtml) {\n                    const foreignObjectSizing =\n                        (util.isDimensionMissing(width)\n                            ? ' width=\"100%\"'\n                            : ` width=\"${width}\"`) +\n                        (util.isDimensionMissing(height)\n                            ? ' height=\"100%\"'\n                            : ` height=\"${height}\"`);\n                    const svgSizing =\n                        (util.isDimensionMissing(width) ? '' : ` width=\"${width}\"`) +\n                        (util.isDimensionMissing(height) ? '' : ` height=\"${height}\"`);\n                    return `<svg xmlns=\"http://www.w3.org/2000/svg\"${svgSizing}><foreignObject${foreignObjectSizing}>${xhtml}</foreignObject></svg>`;\n                })\n                .then(function (svg) {\n                    return `data:image/svg+xml;charset=utf-8,${svg}`;\n                });\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas\n                .getContext('2d')\n                .getImageData(0, 0, util.width(node), util.height(node)).data;\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas.toDataURL();\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas.toDataURL(\n                'image/jpeg',\n                (options ? options.quality : undefined) || 1.0\n            );\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options).then(util.canvasToBlob);\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a canvas object\n     * */\n    function toCanvas(node, options) {\n        return draw(node, options);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if (typeof options.copyDefaultStyles === 'undefined') {\n            domtoimage.impl.options.copyDefaultStyles = defaultOptions.copyDefaultStyles;\n        } else {\n            domtoimage.impl.options.copyDefaultStyles = options.copyDefaultStyles;\n        }\n\n        if (typeof options.imagePlaceholder === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if (typeof options.cacheBust === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n\n        if (typeof options.corsImg === 'undefined') {\n            domtoimage.impl.options.corsImg = defaultOptions.corsImg;\n        } else {\n            domtoimage.impl.options.corsImg = options.corsImg;\n        }\n\n        if (typeof options.useCredentials === 'undefined') {\n            domtoimage.impl.options.useCredentials = defaultOptions.useCredentials;\n        } else {\n            domtoimage.impl.options.useCredentials = options.useCredentials;\n        }\n\n        if (typeof options.useCredentialsFilters === 'undefined') {\n            domtoimage.impl.options.useCredentialsFilters =\n                defaultOptions.useCredentialsFilters;\n        } else {\n            domtoimage.impl.options.useCredentialsFilters = options.useCredentialsFilters;\n        }\n\n        if (typeof options.httpTimeout === 'undefined') {\n            domtoimage.impl.options.httpTimeout = defaultOptions.httpTimeout;\n        } else {\n            domtoimage.impl.options.httpTimeout = options.httpTimeout;\n        }\n\n        if (typeof options.styleCaching === 'undefined') {\n            domtoimage.impl.options.styleCaching = defaultOptions.styleCaching;\n        } else {\n            domtoimage.impl.options.styleCaching = options.styleCaching;\n        }\n    }\n\n    function draw(domNode, options) {\n        options = options || {};\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(function (image) {\n                const scale = typeof options.scale !== 'number' ? 1 : options.scale;\n                const canvas = newCanvas(domNode, scale);\n                const ctx = canvas.getContext('2d');\n                ctx.msImageSmoothingEnabled = false;\n                ctx.imageSmoothingEnabled = false;\n                if (image) {\n                    ctx.scale(scale, scale);\n                    ctx.drawImage(image, 0, 0);\n                }\n                return canvas;\n            });\n\n        function newCanvas(node, scale) {\n            let width = options.width || util.width(node);\n            let height = options.height || util.height(node);\n\n            // per https://www.w3.org/TR/CSS2/visudet.html#inline-replaced-width the default width should be 300px if height\n            // not set, otherwise should be 2:1 aspect ratio for whatever height is specified\n            if (util.isDimensionMissing(width)) {\n                width = util.isDimensionMissing(height) ? 300 : height * 2.0;\n            }\n\n            if (util.isDimensionMissing(height)) {\n                height = width / 2.0;\n            }\n\n            const canvas = document.createElement('canvas');\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n\n            if (options.bgcolor) {\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    let sandbox = null;\n\n    function cloneNode(node, options, parentComputedStyles, ownerWindow) {\n        const filter = options.filter;\n        if (\n            node === sandbox ||\n            util.isHTMLScriptElement(node) ||\n            util.isHTMLStyleElement(node) ||\n            util.isHTMLLinkElement(node) ||\n            (parentComputedStyles !== null && filter && !filter(node))\n        ) {\n            return Promise.resolve();\n        }\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(adjustCloneBefore)\n            .then(function (clone) {\n                return cloneChildren(clone, getParentOfChildren(node));\n            })\n            .then(adjustCloneAfter)\n            .then(function (clone) {\n                return processClone(clone, node);\n            });\n\n        function makeNodeCopy(original) {\n            if (util.isHTMLCanvasElement(original)) {\n                return util.makeImage(original.toDataURL());\n            }\n            return original.cloneNode(false);\n        }\n\n        function adjustCloneBefore(clone) {\n            if (options.adjustClonedNode) {\n                options.adjustClonedNode(node, clone, false);\n            }\n            return Promise.resolve(clone);\n        }\n\n        function adjustCloneAfter(clone) {\n            if (options.adjustClonedNode) {\n                options.adjustClonedNode(node, clone, true);\n            }\n            return Promise.resolve(clone);\n        }\n\n        function getParentOfChildren(original) {\n            if (util.isElementHostForOpenShadowRoot(original)) {\n                return original.shadowRoot; // jump \"down\" to #shadow-root\n            }\n            return original;\n        }\n\n        function cloneChildren(clone, original) {\n            const originalChildren = getRenderedChildren(original);\n            let done = Promise.resolve();\n\n            if (originalChildren.length !== 0) {\n                const originalComputedStyles = getComputedStyle(\n                    getRenderedParent(original)\n                );\n\n                util.asArray(originalChildren).forEach(function (originalChild) {\n                    done = done.then(function () {\n                        return cloneNode(\n                            originalChild,\n                            options,\n                            originalComputedStyles,\n                            ownerWindow\n                        ).then(function (clonedChild) {\n                            if (clonedChild) {\n                                clone.appendChild(clonedChild);\n                            }\n                        });\n                    });\n                });\n            }\n\n            return done.then(function () {\n                return clone;\n            });\n\n            function getRenderedParent(original) {\n                if (util.isShadowRoot(original)) {\n                    return original.host; // jump up from #shadow-root to its parent <element>\n                }\n                return original;\n            }\n\n            function getRenderedChildren(original) {\n                if (util.isShadowSlotElement(original)) {\n                    const assignedNodes = original.assignedNodes();\n\n                    if (assignedNodes && assignedNodes.length > 0) return assignedNodes; // shadow DOM <slot> has \"assigned nodes\" as rendered children\n                }\n                return original.childNodes;\n            }\n        }\n\n        function processClone(clone, original) {\n            if (!util.isElement(clone) || util.isShadowSlotElement(original)) {\n                return Promise.resolve(clone);\n            }\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(original, clone);\n\n                function copyFont(source, target) {\n                    target.font = source.font;\n                    target.fontFamily = source.fontFamily;\n                    target.fontFeatureSettings = source.fontFeatureSettings;\n                    target.fontKerning = source.fontKerning;\n                    target.fontSize = source.fontSize;\n                    target.fontStretch = source.fontStretch;\n                    target.fontStyle = source.fontStyle;\n                    target.fontVariant = source.fontVariant;\n                    target.fontVariantCaps = source.fontVariantCaps;\n                    target.fontVariantEastAsian = source.fontVariantEastAsian;\n                    target.fontVariantLigatures = source.fontVariantLigatures;\n                    target.fontVariantNumeric = source.fontVariantNumeric;\n                    target.fontVariationSettings = source.fontVariationSettings;\n                    target.fontWeight = source.fontWeight;\n                }\n\n                function copyStyle(sourceElement, targetElement) {\n                    const sourceComputedStyles = getComputedStyle(sourceElement);\n                    if (sourceComputedStyles.cssText) {\n                        targetElement.style.cssText = sourceComputedStyles.cssText;\n                        copyFont(sourceComputedStyles, targetElement.style); // here we re-assign the font props.\n                    } else {\n                        copyUserComputedStyleFast(\n                            options,\n                            sourceElement,\n                            sourceComputedStyles,\n                            parentComputedStyles,\n                            targetElement\n                        );\n\n                        // Remove positioning of initial element, which stops them from being captured correctly\n                        if (parentComputedStyles === null) {\n                            [\n                                'inset-block',\n                                'inset-block-start',\n                                'inset-block-end',\n                            ].forEach((prop) => targetElement.style.removeProperty(prop));\n                            ['left', 'right', 'top', 'bottom'].forEach((prop) => {\n                                if (targetElement.style.getPropertyValue(prop)) {\n                                    targetElement.style.setProperty(prop, '0px');\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                const cloneClassName = util.uid();\n\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    const style = getComputedStyle(original, element);\n                    const content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') {\n                        return;\n                    }\n\n                    const currentClass = clone.getAttribute('class') || '';\n                    clone.setAttribute('class', `${currentClass} ${cloneClassName}`);\n\n                    const styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle());\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle() {\n                        const selector = `.${cloneClassName}:${element}`;\n                        const cssText = style.cssText\n                            ? formatCssText()\n                            : formatCssProperties();\n\n                        return document.createTextNode(`${selector}{${cssText}}`);\n\n                        function formatCssText() {\n                            return `${style.cssText} content: ${content};`;\n                        }\n\n                        function formatCssProperties() {\n                            const styleText = util\n                                .asArray(style)\n                                .map(formatProperty)\n                                .join('; ');\n                            return `${styleText};`;\n\n                            function formatProperty(name) {\n                                const propertyValue = style.getPropertyValue(name);\n                                const propertyPriority = style.getPropertyPriority(name)\n                                    ? ' !important'\n                                    : '';\n                                return `${name}: ${propertyValue}${propertyPriority}`;\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (util.isHTMLTextAreaElement(original)) {\n                    clone.innerHTML = original.value;\n                }\n                if (util.isHTMLInputElement(original)) {\n                    clone.setAttribute('value', original.value);\n                }\n            }\n\n            function fixSvg() {\n                if (util.isSVGElement(clone)) {\n                    clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                    if (util.isSVGRectElement(clone)) {\n                        ['width', 'height'].forEach(function (attribute) {\n                            const value = clone.getAttribute(attribute);\n                            if (value) {\n                                clone.style.setProperty(attribute, value);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll().then(function (cssText) {\n            if (cssText !== '') {\n                const styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n            }\n            return node;\n        });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node).then(function () {\n            return node;\n        });\n    }\n\n    function newUtil() {\n        let uid_index = 0;\n\n        return {\n            escape: escapeRegEx,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid,\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height,\n            getWindow: getWindow,\n            isElement: isElement,\n            isElementHostForOpenShadowRoot: isElementHostForOpenShadowRoot,\n            isShadowRoot: isShadowRoot,\n            isInShadowRoot: isInShadowRoot,\n            isHTMLElement: isHTMLElement,\n            isHTMLCanvasElement: isHTMLCanvasElement,\n            isHTMLInputElement: isHTMLInputElement,\n            isHTMLImageElement: isHTMLImageElement,\n            isHTMLLinkElement: isHTMLLinkElement,\n            isHTMLScriptElement: isHTMLScriptElement,\n            isHTMLStyleElement: isHTMLStyleElement,\n            isHTMLTextAreaElement: isHTMLTextAreaElement,\n            isShadowSlotElement: isShadowSlotElement,\n            isSVGElement: isSVGElement,\n            isSVGRectElement: isSVGRectElement,\n            isDimensionMissing: isDimensionMissing,\n        };\n\n        function getWindow(node) {\n            const ownerDocument = node ? node.ownerDocument : undefined;\n            return (\n                (ownerDocument ? ownerDocument.defaultView : undefined) ||\n                window ||\n                global\n            );\n        }\n\n        function isElementHostForOpenShadowRoot(value) {\n            return isElement(value) && value.shadowRoot !== null;\n        }\n\n        function isShadowRoot(value) {\n            return value instanceof getWindow(value).ShadowRoot;\n        }\n\n        function isInShadowRoot(value) {\n            // not calling the method, getting the method\n            if (value === null || value === undefined || value.getRootNode === undefined)\n                return false;\n            return isShadowRoot(value.getRootNode());\n        }\n\n        function isElement(value) {\n            return value instanceof getWindow(value).Element;\n        }\n\n        function isHTMLCanvasElement(value) {\n            return value instanceof getWindow(value).HTMLCanvasElement;\n        }\n\n        function isHTMLElement(value) {\n            return value instanceof getWindow(value).HTMLElement;\n        }\n\n        function isHTMLImageElement(value) {\n            return value instanceof getWindow(value).HTMLImageElement;\n        }\n\n        function isHTMLInputElement(value) {\n            return value instanceof getWindow(value).HTMLInputElement;\n        }\n\n        function isHTMLLinkElement(value) {\n            return value instanceof getWindow(value).HTMLLinkElement;\n        }\n\n        function isHTMLScriptElement(value) {\n            return value instanceof getWindow(value).HTMLScriptElement;\n        }\n\n        function isHTMLStyleElement(value) {\n            return value instanceof getWindow(value).HTMLStyleElement;\n        }\n\n        function isHTMLTextAreaElement(value) {\n            return value instanceof getWindow(value).HTMLTextAreaElement;\n        }\n\n        function isShadowSlotElement(value) {\n            return (\n                isInShadowRoot(value) && value instanceof getWindow(value).HTMLSlotElement\n            );\n        }\n\n        function isSVGElement(value) {\n            return value instanceof getWindow(value).SVGElement;\n        }\n\n        function isSVGRectElement(value) {\n            return value instanceof getWindow(value).SVGRectElement;\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function isDimensionMissing(value) {\n            return isNaN(value) || value <= 0;\n        }\n\n        function asBlob(canvas) {\n            return new Promise(function (resolve) {\n                const binaryString = atob(canvas.toDataURL().split(',')[1]);\n                const length = binaryString.length;\n                const binaryArray = new Uint8Array(length);\n\n                for (let i = 0; i < length; i++) {\n                    binaryArray[i] = binaryString.charCodeAt(i);\n                }\n\n                resolve(\n                    new Blob([binaryArray], {\n                        type: 'image/png',\n                    })\n                );\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob) {\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n            }\n\n            return asBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            const doc = document.implementation.createHTMLDocument();\n            const base = doc.createElement('base');\n            doc.head.appendChild(base);\n            const a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            return `u${fourRandomChars()}${uid_index++}`;\n\n            function fourRandomChars() {\n                /* see https://stackoverflow.com/a/6248722/2519373 */\n                return `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(\n                    36\n                )}`.slice(-4);\n            }\n        }\n\n        function makeImage(uri) {\n            if (uri === 'data:,') {\n                return Promise.resolve();\n            }\n\n            return new Promise(function (resolve, reject) {\n                // Create an SVG element to house the image\n                const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                \n                // and create the Image element to insert into that wrapper\n                const image = new Image();\n\n                if (domtoimage.impl.options.useCredentials) {\n                    image.crossOrigin = 'use-credentials';\n                }\n\n                image.onload = function () {\n                    // Cleanup: remove theimage from the document\n                    document.body.removeChild(svg);\n\n                    if (window && window.requestAnimationFrame) {\n                        // In order to work around a Firefox bug (webcompat/web-bugs#119834) we\n                        // need to wait one extra frame before it's safe to read the image data.\n                        window.requestAnimationFrame(function () {\n                            resolve(image);\n                        });\n                    } else {\n                        // If we don't have a window or requestAnimationFrame function proceed immediately.\n                        resolve(image);\n                    }\n                };\n                \n                image.onerror = (error) => {\n                    // Cleanup: remove the image from the document\n                    document.body.removeChild(svg);\n\n                    reject(error);\n                };\n\n                svg.appendChild(image);\n                image.src = uri;\n                \n                // Add the SVG to the document body (invisible)\n                document.body.appendChild(svg);\n            });\n        }\n\n        function getAndEncode(url) {\n            let cacheEntry = domtoimage.impl.urlCache.find(function (el) {\n                return el.url === url;\n            });\n\n            if (!cacheEntry) {\n                cacheEntry = {\n                    url: url,\n                    promise: null,\n                };\n                domtoimage.impl.urlCache.push(cacheEntry);\n            }\n\n            if (cacheEntry.promise === null) {\n                if (domtoimage.impl.options.cacheBust) {\n                    // Cache bypass so we dont have CORS issues with cached images\n                    // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                    url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n                }\n\n                cacheEntry.promise = new Promise(function (resolve) {\n                    const httpTimeout = domtoimage.impl.options.httpTimeout;\n                    const request = new XMLHttpRequest();\n\n                    request.onreadystatechange = done;\n                    request.ontimeout = timeout;\n                    request.responseType = 'blob';\n                    request.timeout = httpTimeout;\n\n                    if (domtoimage.impl.options.useCredentialsFilters.length > 0) {\n                        domtoimage.impl.options.useCredentials =\n                            domtoimage.impl.options.useCredentialsFilters.filter(\n                                (credentialsFilter) => url.search(credentialsFilter) >= 0\n                            ).length > 0;\n                    }\n\n                    if (domtoimage.impl.options.useCredentials) {\n                        request.withCredentials = true;\n                    }\n\n                    if (\n                        domtoimage.impl.options.corsImg &&\n                        url.indexOf('http') === 0 &&\n                        url.indexOf(window.location.origin) === -1\n                    ) {\n                        const method =\n                            (\n                                domtoimage.impl.options.corsImg.method || 'GET'\n                            ).toUpperCase() === 'POST'\n                                ? 'POST'\n                                : 'GET';\n\n                        request.open(\n                            method,\n                            (domtoimage.impl.options.corsImg.url || '').replace(\n                                '#{cors}',\n                                url\n                            ),\n                            true\n                        );\n\n                        let isJson = false;\n                        const headers = domtoimage.impl.options.corsImg.headers || {};\n                        Object.keys(headers).forEach(function (key) {\n                            if (headers[key].indexOf('application/json') !== -1) {\n                                isJson = true;\n                            }\n                            request.setRequestHeader(key, headers[key]);\n                        });\n\n                        const corsData = handleJson(\n                            domtoimage.impl.options.corsImg.data || ''\n                        );\n\n                        Object.keys(corsData).forEach(function (key) {\n                            if (typeof corsData[key] === 'string') {\n                                corsData[key] = corsData[key].replace('#{cors}', url);\n                            }\n                        });\n\n                        request.send(isJson ? JSON.stringify(corsData) : corsData);\n                    } else {\n                        request.open('GET', url, true);\n                        request.send();\n                    }\n\n                    let placeholder;\n                    if (domtoimage.impl.options.imagePlaceholder) {\n                        const split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                        if (split && split[1]) {\n                            placeholder = split[1];\n                        }\n                    }\n\n                    function done() {\n                        if (request.readyState !== 4) {\n                            return;\n                        }\n\n                        if (request.status >= 300) {\n                            if (placeholder) {\n                                resolve(placeholder);\n                            } else {\n                                fail(\n                                    `cannot fetch resource: ${url}, status: ${request.status}`\n                                );\n                            }\n\n                            return;\n                        }\n\n                        const encoder = new FileReader();\n                        encoder.onloadend = function () {\n                            resolve(encoder.result);\n                        };\n                        encoder.readAsDataURL(request.response);\n                    }\n\n                    function timeout() {\n                        if (placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail(\n                                `timeout of ${httpTimeout}ms occured while fetching resource: ${url}`\n                            );\n                        }\n                    }\n\n                    function handleJson(data) {\n                        try {\n                            return JSON.parse(JSON.stringify(data));\n                        } catch (e) {\n                            fail('corsImg.data is missing or invalid:' + e.toString());\n                            return;\n                        }\n                    }\n\n                    function fail(message) {\n                        console.error(message);\n                        resolve('');\n                    }\n                });\n            }\n            return cacheEntry.promise;\n        }\n\n        function escapeRegEx(string) {\n            return string.replace(/([.*+?^${}()|[\\]/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            const array = [];\n            const length = arrayLike.length;\n            for (let i = 0; i < length; i++) {\n                array.push(arrayLike[i]);\n            }\n\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/%/g, '%25').replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            const width = px(node, 'width');\n\n            if (!isNaN(width)) return width;\n\n            const leftBorder = px(node, 'border-left-width');\n            const rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            const height = px(node, 'height');\n\n            if (!isNaN(height)) return height;\n\n            const topBorder = px(node, 'border-top-width');\n            const bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            if (node.nodeType === ELEMENT_NODE) {\n                let value = getComputedStyle(node).getPropertyValue(styleProperty);\n                if (value.slice(-2) === 'px') {\n                    value = value.slice(0, -2);\n                    return parseFloat(value);\n                }\n            }\n\n            return NaN;\n        }\n    }\n\n    function newInliner() {\n        const URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline,\n            },\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            const result = [];\n            let match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (urlValue) {\n                    return baseUrl ? util.resolveUrl(urlValue, baseUrl) : urlValue;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), `$1${dataUrl}$3`);\n                });\n\n            function urlAsRegex(urlValue) {\n                return new RegExp(\n                    `(url\\\\(['\"]?)(${util.escape(urlValue)})(['\"]?\\\\))`,\n                    'g'\n                );\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) {\n                return Promise.resolve(string);\n            }\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    let done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (prefix) {\n                            return inline(prefix, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll,\n            },\n        };\n\n        function resolveAll() {\n            return readAll()\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                const cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    const sheetProto = Object.getPrototypeOf(sheet);\n                    if (Object.prototype.hasOwnProperty.call(sheetProto, 'cssRules')) {\n                        try {\n                            util.asArray(sheet.cssRules || []).forEach(\n                                cssRules.push.bind(cssRules)\n                            );\n                        } catch (e) {\n                            console.error(\n                                `domtoimage: Error while reading CSS rules from ${sheet.href}`,\n                                e.toString()\n                            );\n                        }\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        const baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    },\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage,\n            },\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline,\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) {\n                    return Promise.resolve();\n                }\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve) {\n                            element.onload = resolve;\n                            // for any image with invalid src(such as <img src />), just ignore it\n                            element.onerror = resolve;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!util.isElement(node)) {\n                return Promise.resolve(node);\n            }\n\n            return inlineCSSProperty(node).then(function () {\n                if (util.isHTMLImageElement(node)) {\n                    return newImage(node).inline();\n                } else {\n                    return Promise.all(\n                        util.asArray(node.childNodes).map(function (child) {\n                            return inlineAll(child);\n                        })\n                    );\n                }\n            });\n\n            function inlineCSSProperty(node) {\n                const properties = ['background', 'background-image'];\n\n                const inliningTasks = properties.map(function (propertyName) {\n                    const value = node.style.getPropertyValue(propertyName);\n                    const priority = node.style.getPropertyPriority(propertyName);\n\n                    if (!value) {\n                        return Promise.resolve();\n                    }\n\n                    return inliner.inlineAll(value).then(function (inlinedValue) {\n                        node.style.setProperty(propertyName, inlinedValue, priority);\n                    });\n                });\n\n                return Promise.all(inliningTasks).then(function () {\n                    return node;\n                });\n            }\n        }\n    }\n\n    function setStyleProperty(targetStyle, name, value, priority) {\n        const needs_prefixing = ['background-clip'].indexOf(name) >= 0;\n        if (priority) {\n            targetStyle.setProperty(name, value, priority);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value, priority);\n            }\n        } else {\n            targetStyle.setProperty(name, value);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value);\n            }\n        }\n    }\n\n    function copyUserComputedStyleFast(\n        options,\n        sourceElement,\n        sourceComputedStyles,\n        parentComputedStyles,\n        targetElement\n    ) {\n        const defaultStyle = domtoimage.impl.options.copyDefaultStyles\n            ? getDefaultStyle(options, sourceElement)\n            : {};\n        const targetStyle = targetElement.style;\n\n        util.asArray(sourceComputedStyles).forEach(function (name) {\n            const sourceValue = sourceComputedStyles.getPropertyValue(name);\n            const defaultValue = defaultStyle[name];\n            const parentValue = parentComputedStyles\n                ? parentComputedStyles.getPropertyValue(name)\n                : undefined;\n\n            // Ignore setting style property on clone node, if already it has a style (through adjustCloneNode)\n            const targetValue = targetStyle.getPropertyValue(name);\n            if (targetValue) return;\n\n            // If the style does not match the default, or it does not match the parent's, set it. We don't know which\n            // styles are inherited from the parent and which aren't, so we have to always check both.\n            if (\n                sourceValue !== defaultValue ||\n                (parentComputedStyles && sourceValue !== parentValue)\n            ) {\n                const priority = sourceComputedStyles.getPropertyPriority(name);\n                setStyleProperty(targetStyle, name, sourceValue, priority);\n            }\n        });\n    }\n\n    let removeDefaultStylesTimeoutId = null;\n    let tagNameDefaultStyles = {};\n\n    const ascentStoppers = [\n        // these come from https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\n        'ADDRESS',\n        'ARTICLE',\n        'ASIDE',\n        'BLOCKQUOTE',\n        'DETAILS',\n        'DIALOG',\n        'DD',\n        'DIV',\n        'DL',\n        'DT',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'LI',\n        'MAIN',\n        'NAV',\n        'OL',\n        'P',\n        'PRE',\n        'SECTION',\n        'SVG',\n        'TABLE',\n        'UL',\n        // this is some non-standard ones\n        'math', // intentionally lowercase, thanks Safari\n        'svg', // in case we have an svg embedded element\n        // these are ultimate stoppers in case something drastic changes in how the DOM works\n        'BODY',\n        'HEAD',\n        'HTML',\n    ];\n\n    function getDefaultStyle(options, sourceElement) {\n        const tagHierarchy = computeTagHierarchy(sourceElement);\n        const tagKey = computeTagKey(tagHierarchy);\n        if (tagNameDefaultStyles[tagKey]) {\n            return tagNameDefaultStyles[tagKey];\n        }\n\n        // We haven't cached the answer for that hierachy yet, build a\n        // sandbox (if not yet created), fill it with the hierarchy that\n        // matters, and grab the default styles associated\n        const sandboxWindow = ensureSandboxWindow();\n        const defaultElement = constructElementHierachy(\n            sandboxWindow.document,\n            tagHierarchy\n        );\n        const defaultStyle = computeStyleForDefaults(sandboxWindow, defaultElement);\n        destroyElementHierarchy(defaultElement);\n\n        tagNameDefaultStyles[tagKey] = defaultStyle;\n        return defaultStyle;\n\n        function computeTagHierarchy(sourceNode) {\n            const tagNames = [];\n\n            do {\n                if (sourceNode.nodeType === ELEMENT_NODE) {\n                    const tagName = sourceNode.tagName;\n                    tagNames.push(tagName);\n\n                    if (ascentStoppers.includes(tagName)) {\n                        break;\n                    }\n                }\n\n                sourceNode = sourceNode.parentNode;\n            } while (sourceNode);\n\n            return tagNames;\n        }\n\n        function computeTagKey(tagHierarchy) {\n            if (options.styleCaching === 'relaxed') {\n                // pick up only the ascent-stopping element tag and the element tag itself\n                /* jshint unused:true */\n                return tagHierarchy\n                    .filter((_, i, a) => i === 0 || i === a.length - 1)\n                    .join('>');\n            }\n            // for all other cases, fall back the the entire path\n            return tagHierarchy.join('>'); // it's like CSS\n        }\n\n        function constructElementHierachy(sandboxDocument, tagHierarchy) {\n            let element = sandboxDocument.body;\n            do {\n                const childTagName = tagHierarchy.pop();\n                const childElement = sandboxDocument.createElement(childTagName);\n                element.appendChild(childElement);\n                element = childElement;\n            } while (tagHierarchy.length > 0);\n\n            // Ensure that there is some content, so that properties like margin are applied.\n            // we use zero-width space to handle FireFox adding a pixel\n            element.textContent = '\\u200b';\n            return element;\n        }\n\n        function computeStyleForDefaults(sandboxWindow, defaultElement) {\n            const defaultStyle = {};\n            const defaultComputedStyle = sandboxWindow.getComputedStyle(defaultElement);\n\n            // Copy styles to an object, making sure that 'width' and 'height' are given the default value of 'auto', since\n            // their initial value is always 'auto' despite that the default computed value is sometimes an absolute length.\n            util.asArray(defaultComputedStyle).forEach(function (name) {\n                defaultStyle[name] =\n                    name === 'width' || name === 'height'\n                        ? 'auto'\n                        : defaultComputedStyle.getPropertyValue(name);\n            });\n            return defaultStyle;\n        }\n\n        function destroyElementHierarchy(element) {\n            do {\n                const parentElement = element.parentElement;\n                if (parentElement !== null) {\n                    parentElement.removeChild(element);\n                }\n                element = parentElement;\n            } while (element && element.tagName !== 'BODY');\n        }\n    }\n\n    function ensureSandboxWindow() {\n        if (sandbox) {\n            return sandbox.contentWindow;\n        }\n\n        // figure out how this document is defined (doctype and charset)\n        const charsetToUse = document.characterSet || 'UTF-8';\n        const docType = document.doctype;\n        const docTypeDeclaration = docType\n            ? `<!DOCTYPE ${escapeHTML(docType.name)} ${escapeHTML(\n                  docType.publicId\n              )} ${escapeHTML(docType.systemId)}`.trim() + '>'\n            : '';\n\n        // Create a hidden sandbox <iframe> element within we can create default HTML elements and query their\n        // computed styles. Elements must be rendered in order to query their computed styles. The <iframe> won't\n        // render at all with `display: none`, so we have to use `visibility: hidden` with `position: fixed`.\n        sandbox = document.createElement('iframe');\n        sandbox.id = 'domtoimage-sandbox-' + util.uid();\n        sandbox.style.visibility = 'hidden';\n        sandbox.style.position = 'fixed';\n        document.body.appendChild(sandbox);\n\n        return tryTechniques(\n            sandbox,\n            docTypeDeclaration,\n            charsetToUse,\n            'domtoimage-sandbox'\n        );\n\n        function escapeHTML(unsafeText) {\n            if (unsafeText) {\n                const div = document.createElement('div');\n                div.innerText = unsafeText;\n                return div.innerHTML;\n            } else {\n                return '';\n            }\n        }\n\n        function tryTechniques(sandbox, doctype, charset, title) {\n            // try the good old-fashioned document write with all the correct attributes set\n            try {\n                sandbox.contentWindow.document.write(\n                    `${doctype}<html><head><meta charset='${charset}'><title>${title}</title></head><body></body></html>`\n                );\n                return sandbox.contentWindow;\n            } catch (_) {\n                // swallow exception and fall through to next technique\n            }\n\n            const metaCharset = document.createElement('meta');\n            metaCharset.setAttribute('charset', charset);\n\n            // let's attempt it using srcdoc, so we can still set the doctype and charset\n            try {\n                const sandboxDocument = document.implementation.createHTMLDocument(title);\n                sandboxDocument.head.appendChild(metaCharset);\n                const sandboxHTML = doctype + sandboxDocument.documentElement.outerHTML;\n                sandbox.setAttribute('srcdoc', sandboxHTML);\n                return sandbox.contentWindow;\n            } catch (_) {\n                // swallow exception and fall through to the simplest path\n            }\n\n            // let's attempt it using contentDocument... here we're not able to set the doctype\n            sandbox.contentDocument.head.appendChild(metaCharset);\n            sandbox.contentDocument.title = title;\n            return sandbox.contentWindow;\n        }\n    }\n\n    function removeSandbox() {\n        if (sandbox) {\n            document.body.removeChild(sandbox);\n            sandbox = null;\n        }\n\n        if (removeDefaultStylesTimeoutId) {\n            clearTimeout(removeDefaultStylesTimeoutId);\n        }\n\n        removeDefaultStylesTimeoutId = setTimeout(() => {\n            removeDefaultStylesTimeoutId = null;\n            tagNameDefaultStyles = {};\n        }, 20 * 1000);\n    }\n})(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}